// Code generated by protoc-gen-go.
// source: socialroom.proto
// DO NOT EDIT!

package protocol

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// 进入私人房间,包括观众，断线重连，私人房间进入拍桌全部通用接口
type CEnterSocialRoom struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=7001" json:"code,omitempty"`
	Invitecode       *string `protobuf:"bytes,2,req,name=invitecode" json:"invitecode,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CEnterSocialRoom) Reset()                    { *m = CEnterSocialRoom{} }
func (m *CEnterSocialRoom) String() string            { return proto.CompactTextString(m) }
func (*CEnterSocialRoom) ProtoMessage()               {}
func (*CEnterSocialRoom) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{0} }

const Default_CEnterSocialRoom_Code uint32 = 7001

func (m *CEnterSocialRoom) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_CEnterSocialRoom_Code
}

func (m *CEnterSocialRoom) GetInvitecode() string {
	if m != nil && m.Invitecode != nil {
		return *m.Invitecode
	}
	return ""
}

type SEnterSocialRoom struct {
	Code             *uint32      `protobuf:"varint,1,opt,name=code,def=7001" json:"code,omitempty"`
	Position         *uint32      `protobuf:"varint,2,req,name=Position" json:"Position,omitempty"`
	Room             *RoomData    `protobuf:"bytes,3,req,name=room" json:"room,omitempty"`
	Userinfo         []*ProtoUser `protobuf:"bytes,4,rep,name=userinfo" json:"userinfo,omitempty"`
	Beginning        *bool        `protobuf:"varint,5,req,name=beginning" json:"beginning,omitempty"`
	CardsCount       *uint32      `protobuf:"varint,6,req,name=cardsCount" json:"cardsCount,omitempty"`
	Dice             *uint32      `protobuf:"varint,7,req,name=dice" json:"dice,omitempty"`
	KongCount        *uint32      `protobuf:"varint,8,req,name=kongCount" json:"kongCount,omitempty"`
	Herojiseat       *uint32      `protobuf:"varint,9,req,name=herojiseat" json:"herojiseat,omitempty"`
	Dutyjiseat       *uint32      `protobuf:"varint,10,req,name=dutyjiseat" json:"dutyjiseat,omitempty"`
	Cards            []*ProtoCard `protobuf:"bytes,11,rep,name=cards" json:"cards,omitempty"`
	Turn             *uint32      `protobuf:"varint,12,req,name=turn" json:"turn,omitempty"`
	Handcards        []byte       `protobuf:"bytes,13,req,name=handcards" json:"handcards,omitempty"`
	Value            *uint32      `protobuf:"varint,14,req,name=value" json:"value,omitempty"`
	Watchseat        *uint32      `protobuf:"varint,15,req,name=watchseat" json:"watchseat,omitempty"`
	Ready            *bool        `protobuf:"varint,16,req,name=ready" json:"ready,omitempty"`
	Score            *int32       `protobuf:"varint,17,req,name=score" json:"score,omitempty"`
	Ma               *uint32      `protobuf:"varint,18,req,name=ma" json:"ma,omitempty"`
	LaunchSeat       *uint32      `protobuf:"varint,19,req,name=launchSeat" json:"launchSeat,omitempty"`
	VoteAgree        []uint32     `protobuf:"varint,20,rep,name=voteAgree" json:"voteAgree,omitempty"`
	VoteDisagree     []uint32     `protobuf:"varint,21,rep,name=voteDisagree" json:"voteDisagree,omitempty"`
	Error            *uint32      `protobuf:"varint,22,opt,name=error,def=0" json:"error,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *SEnterSocialRoom) Reset()                    { *m = SEnterSocialRoom{} }
func (m *SEnterSocialRoom) String() string            { return proto.CompactTextString(m) }
func (*SEnterSocialRoom) ProtoMessage()               {}
func (*SEnterSocialRoom) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{1} }

const Default_SEnterSocialRoom_Code uint32 = 7001
const Default_SEnterSocialRoom_Error uint32 = 0

func (m *SEnterSocialRoom) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_SEnterSocialRoom_Code
}

func (m *SEnterSocialRoom) GetPosition() uint32 {
	if m != nil && m.Position != nil {
		return *m.Position
	}
	return 0
}

func (m *SEnterSocialRoom) GetRoom() *RoomData {
	if m != nil {
		return m.Room
	}
	return nil
}

func (m *SEnterSocialRoom) GetUserinfo() []*ProtoUser {
	if m != nil {
		return m.Userinfo
	}
	return nil
}

func (m *SEnterSocialRoom) GetBeginning() bool {
	if m != nil && m.Beginning != nil {
		return *m.Beginning
	}
	return false
}

func (m *SEnterSocialRoom) GetCardsCount() uint32 {
	if m != nil && m.CardsCount != nil {
		return *m.CardsCount
	}
	return 0
}

func (m *SEnterSocialRoom) GetDice() uint32 {
	if m != nil && m.Dice != nil {
		return *m.Dice
	}
	return 0
}

func (m *SEnterSocialRoom) GetKongCount() uint32 {
	if m != nil && m.KongCount != nil {
		return *m.KongCount
	}
	return 0
}

func (m *SEnterSocialRoom) GetHerojiseat() uint32 {
	if m != nil && m.Herojiseat != nil {
		return *m.Herojiseat
	}
	return 0
}

func (m *SEnterSocialRoom) GetDutyjiseat() uint32 {
	if m != nil && m.Dutyjiseat != nil {
		return *m.Dutyjiseat
	}
	return 0
}

func (m *SEnterSocialRoom) GetCards() []*ProtoCard {
	if m != nil {
		return m.Cards
	}
	return nil
}

func (m *SEnterSocialRoom) GetTurn() uint32 {
	if m != nil && m.Turn != nil {
		return *m.Turn
	}
	return 0
}

func (m *SEnterSocialRoom) GetHandcards() []byte {
	if m != nil {
		return m.Handcards
	}
	return nil
}

func (m *SEnterSocialRoom) GetValue() uint32 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

func (m *SEnterSocialRoom) GetWatchseat() uint32 {
	if m != nil && m.Watchseat != nil {
		return *m.Watchseat
	}
	return 0
}

func (m *SEnterSocialRoom) GetReady() bool {
	if m != nil && m.Ready != nil {
		return *m.Ready
	}
	return false
}

func (m *SEnterSocialRoom) GetScore() int32 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

func (m *SEnterSocialRoom) GetMa() uint32 {
	if m != nil && m.Ma != nil {
		return *m.Ma
	}
	return 0
}

func (m *SEnterSocialRoom) GetLaunchSeat() uint32 {
	if m != nil && m.LaunchSeat != nil {
		return *m.LaunchSeat
	}
	return 0
}

func (m *SEnterSocialRoom) GetVoteAgree() []uint32 {
	if m != nil {
		return m.VoteAgree
	}
	return nil
}

func (m *SEnterSocialRoom) GetVoteDisagree() []uint32 {
	if m != nil {
		return m.VoteDisagree
	}
	return nil
}

func (m *SEnterSocialRoom) GetError() uint32 {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return Default_SEnterSocialRoom_Error
}

// 私人局离开房间
type CPrivateLeave struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=7006" json:"code,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CPrivateLeave) Reset()                    { *m = CPrivateLeave{} }
func (m *CPrivateLeave) String() string            { return proto.CompactTextString(m) }
func (*CPrivateLeave) ProtoMessage()               {}
func (*CPrivateLeave) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{2} }

const Default_CPrivateLeave_Code uint32 = 7006

func (m *CPrivateLeave) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_CPrivateLeave_Code
}

type SPrivateLeave struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=7006" json:"code,omitempty"`
	Seat             *uint32 `protobuf:"varint,2,req,name=seat" json:"seat,omitempty"`
	Error            *uint32 `protobuf:"varint,3,req,name=error,def=0" json:"error,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SPrivateLeave) Reset()                    { *m = SPrivateLeave{} }
func (m *SPrivateLeave) String() string            { return proto.CompactTextString(m) }
func (*SPrivateLeave) ProtoMessage()               {}
func (*SPrivateLeave) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{3} }

const Default_SPrivateLeave_Code uint32 = 7006
const Default_SPrivateLeave_Error uint32 = 0

func (m *SPrivateLeave) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_SPrivateLeave_Code
}

func (m *SPrivateLeave) GetSeat() uint32 {
	if m != nil && m.Seat != nil {
		return *m.Seat
	}
	return 0
}

func (m *SPrivateLeave) GetError() uint32 {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return Default_SPrivateLeave_Error
}

// 私人局，准备游戏
type SReady struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=7008" json:"code,omitempty"`
	Seat             *uint32 `protobuf:"varint,2,req,name=seat" json:"seat,omitempty"`
	Ready            *bool   `protobuf:"varint,3,req,name=ready" json:"ready,omitempty"`
	Error            *uint32 `protobuf:"varint,4,opt,name=error,def=0" json:"error,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SReady) Reset()                    { *m = SReady{} }
func (m *SReady) String() string            { return proto.CompactTextString(m) }
func (*SReady) ProtoMessage()               {}
func (*SReady) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{4} }

const Default_SReady_Code uint32 = 7008
const Default_SReady_Error uint32 = 0

func (m *SReady) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_SReady_Code
}

func (m *SReady) GetSeat() uint32 {
	if m != nil && m.Seat != nil {
		return *m.Seat
	}
	return 0
}

func (m *SReady) GetReady() bool {
	if m != nil && m.Ready != nil {
		return *m.Ready
	}
	return false
}

func (m *SReady) GetError() uint32 {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return Default_SReady_Error
}

type CReady struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=7008" json:"code,omitempty"`
	Ready            *bool   `protobuf:"varint,2,req,name=ready" json:"ready,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CReady) Reset()                    { *m = CReady{} }
func (m *CReady) String() string            { return proto.CompactTextString(m) }
func (*CReady) ProtoMessage()               {}
func (*CReady) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{5} }

const Default_CReady_Code uint32 = 7008

func (m *CReady) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_CReady_Code
}

func (m *CReady) GetReady() bool {
	if m != nil && m.Ready != nil {
		return *m.Ready
	}
	return false
}

type SPrivateOver struct {
	Code             *uint32         `protobuf:"varint,1,opt,name=code,def=7009" json:"code,omitempty"`
	Cid              *uint32         `protobuf:"varint,2,req,name=cid" json:"cid,omitempty"`
	Roomid           *uint32         `protobuf:"varint,3,req,name=roomid" json:"roomid,omitempty"`
	Round            *uint32         `protobuf:"varint,4,req,name=round" json:"round,omitempty"`
	Expire           *uint32         `protobuf:"varint,5,req,name=expire" json:"expire,omitempty"`
	List             []*PrivateScore `protobuf:"bytes,6,rep,name=list" json:"list,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *SPrivateOver) Reset()                    { *m = SPrivateOver{} }
func (m *SPrivateOver) String() string            { return proto.CompactTextString(m) }
func (*SPrivateOver) ProtoMessage()               {}
func (*SPrivateOver) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{6} }

const Default_SPrivateOver_Code uint32 = 7009

func (m *SPrivateOver) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_SPrivateOver_Code
}

func (m *SPrivateOver) GetCid() uint32 {
	if m != nil && m.Cid != nil {
		return *m.Cid
	}
	return 0
}

func (m *SPrivateOver) GetRoomid() uint32 {
	if m != nil && m.Roomid != nil {
		return *m.Roomid
	}
	return 0
}

func (m *SPrivateOver) GetRound() uint32 {
	if m != nil && m.Round != nil {
		return *m.Round
	}
	return 0
}

func (m *SPrivateOver) GetExpire() uint32 {
	if m != nil && m.Expire != nil {
		return *m.Expire
	}
	return 0
}

func (m *SPrivateOver) GetList() []*PrivateScore {
	if m != nil {
		return m.List
	}
	return nil
}

type PrivateScore struct {
	Userid           *string `protobuf:"bytes,1,req,name=userid" json:"userid,omitempty"`
	Score            *int32  `protobuf:"varint,2,req,name=score" json:"score,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *PrivateScore) Reset()                    { *m = PrivateScore{} }
func (m *PrivateScore) String() string            { return proto.CompactTextString(m) }
func (*PrivateScore) ProtoMessage()               {}
func (*PrivateScore) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{7} }

func (m *PrivateScore) GetUserid() string {
	if m != nil && m.Userid != nil {
		return *m.Userid
	}
	return ""
}

func (m *PrivateScore) GetScore() int32 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

// 进入房间7001，离开房间7006，准备游戏7008
// 私人局,创建房间
type CCreatePrivateRoom struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=7010" json:"code,omitempty"`
	Rname            *string `protobuf:"bytes,2,req,name=rname" json:"rname,omitempty"`
	Rtype            *uint32 `protobuf:"varint,3,req,name=rtype" json:"rtype,omitempty"`
	Updownji         *uint32 `protobuf:"varint,4,req,name=updownji" json:"updownji,omitempty"`
	Ante             *uint32 `protobuf:"varint,5,req,name=ante" json:"ante,omitempty"`
	Round            *uint32 `protobuf:"varint,6,req,name=round" json:"round,omitempty"`
	Payment          *uint32 `protobuf:"varint,7,req,name=payment" json:"payment,omitempty"`
	Ma               *uint32 `protobuf:"varint,8,req,name=ma" json:"ma,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CCreatePrivateRoom) Reset()                    { *m = CCreatePrivateRoom{} }
func (m *CCreatePrivateRoom) String() string            { return proto.CompactTextString(m) }
func (*CCreatePrivateRoom) ProtoMessage()               {}
func (*CCreatePrivateRoom) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{8} }

const Default_CCreatePrivateRoom_Code uint32 = 7010

func (m *CCreatePrivateRoom) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_CCreatePrivateRoom_Code
}

func (m *CCreatePrivateRoom) GetRname() string {
	if m != nil && m.Rname != nil {
		return *m.Rname
	}
	return ""
}

func (m *CCreatePrivateRoom) GetRtype() uint32 {
	if m != nil && m.Rtype != nil {
		return *m.Rtype
	}
	return 0
}

func (m *CCreatePrivateRoom) GetUpdownji() uint32 {
	if m != nil && m.Updownji != nil {
		return *m.Updownji
	}
	return 0
}

func (m *CCreatePrivateRoom) GetAnte() uint32 {
	if m != nil && m.Ante != nil {
		return *m.Ante
	}
	return 0
}

func (m *CCreatePrivateRoom) GetRound() uint32 {
	if m != nil && m.Round != nil {
		return *m.Round
	}
	return 0
}

func (m *CCreatePrivateRoom) GetPayment() uint32 {
	if m != nil && m.Payment != nil {
		return *m.Payment
	}
	return 0
}

func (m *CCreatePrivateRoom) GetMa() uint32 {
	if m != nil && m.Ma != nil {
		return *m.Ma
	}
	return 0
}

// 返回房间数据,
type SCreatePrivateRoom struct {
	Code             *uint32   `protobuf:"varint,1,opt,name=code,def=7010" json:"code,omitempty"`
	Rdata            *RoomData `protobuf:"bytes,2,req,name=rdata" json:"rdata,omitempty"`
	Error            *uint32   `protobuf:"varint,3,opt,name=error,def=0" json:"error,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *SCreatePrivateRoom) Reset()                    { *m = SCreatePrivateRoom{} }
func (m *SCreatePrivateRoom) String() string            { return proto.CompactTextString(m) }
func (*SCreatePrivateRoom) ProtoMessage()               {}
func (*SCreatePrivateRoom) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{9} }

const Default_SCreatePrivateRoom_Code uint32 = 7010
const Default_SCreatePrivateRoom_Error uint32 = 0

func (m *SCreatePrivateRoom) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_SCreatePrivateRoom_Code
}

func (m *SCreatePrivateRoom) GetRdata() *RoomData {
	if m != nil {
		return m.Rdata
	}
	return nil
}

func (m *SCreatePrivateRoom) GetError() uint32 {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return Default_SCreatePrivateRoom_Error
}

// 私人局,通知房主可以开始游戏
type SStart struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=7011" json:"code,omitempty"`
	Result           *uint32 `protobuf:"varint,2,req,name=result" json:"result,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SStart) Reset()                    { *m = SStart{} }
func (m *SStart) String() string            { return proto.CompactTextString(m) }
func (*SStart) ProtoMessage()               {}
func (*SStart) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{10} }

const Default_SStart_Code uint32 = 7011

func (m *SStart) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_SStart_Code
}

func (m *SStart) GetResult() uint32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

// 私人局,房主开始游戏
type CStartGame struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=7012" json:"code,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CStartGame) Reset()                    { *m = CStartGame{} }
func (m *CStartGame) String() string            { return proto.CompactTextString(m) }
func (*CStartGame) ProtoMessage()               {}
func (*CStartGame) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{11} }

const Default_CStartGame_Code uint32 = 7012

func (m *CStartGame) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_CStartGame_Code
}

type SStartGame struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=7012" json:"code,omitempty"`
	Result           *uint32 `protobuf:"varint,2,req,name=result" json:"result,omitempty"`
	Error            *uint32 `protobuf:"varint,3,opt,name=error,def=0" json:"error,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SStartGame) Reset()                    { *m = SStartGame{} }
func (m *SStartGame) String() string            { return proto.CompactTextString(m) }
func (*SStartGame) ProtoMessage()               {}
func (*SStartGame) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{12} }

const Default_SStartGame_Code uint32 = 7012
const Default_SStartGame_Error uint32 = 0

func (m *SStartGame) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_SStartGame_Code
}

func (m *SStartGame) GetResult() uint32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

func (m *SStartGame) GetError() uint32 {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return Default_SStartGame_Error
}

// 私人局,踢人
type CKick struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=7013" json:"code,omitempty"`
	Seat             *uint32 `protobuf:"varint,2,req,name=seat" json:"seat,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CKick) Reset()                    { *m = CKick{} }
func (m *CKick) String() string            { return proto.CompactTextString(m) }
func (*CKick) ProtoMessage()               {}
func (*CKick) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{13} }

const Default_CKick_Code uint32 = 7013

func (m *CKick) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_CKick_Code
}

func (m *CKick) GetSeat() uint32 {
	if m != nil && m.Seat != nil {
		return *m.Seat
	}
	return 0
}

type SKick struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=7013" json:"code,omitempty"`
	Result           *uint32 `protobuf:"varint,2,req,name=result" json:"result,omitempty"`
	Seat             *uint32 `protobuf:"varint,3,req,name=seat" json:"seat,omitempty"`
	Invitecode       *string `protobuf:"bytes,4,req,name=invitecode" json:"invitecode,omitempty"`
	Reason           *uint32 `protobuf:"varint,5,req,name=reason" json:"reason,omitempty"`
	Error            *uint32 `protobuf:"varint,6,opt,name=error,def=0" json:"error,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SKick) Reset()                    { *m = SKick{} }
func (m *SKick) String() string            { return proto.CompactTextString(m) }
func (*SKick) ProtoMessage()               {}
func (*SKick) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{14} }

const Default_SKick_Code uint32 = 7013
const Default_SKick_Error uint32 = 0

func (m *SKick) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_SKick_Code
}

func (m *SKick) GetResult() uint32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

func (m *SKick) GetSeat() uint32 {
	if m != nil && m.Seat != nil {
		return *m.Seat
	}
	return 0
}

func (m *SKick) GetInvitecode() string {
	if m != nil && m.Invitecode != nil {
		return *m.Invitecode
	}
	return ""
}

func (m *SKick) GetReason() uint32 {
	if m != nil && m.Reason != nil {
		return *m.Reason
	}
	return 0
}

func (m *SKick) GetError() uint32 {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return Default_SKick_Error
}

// 私人局,发起投票申请解散房间
type CLaunchVote struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=7014" json:"code,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CLaunchVote) Reset()                    { *m = CLaunchVote{} }
func (m *CLaunchVote) String() string            { return proto.CompactTextString(m) }
func (*CLaunchVote) ProtoMessage()               {}
func (*CLaunchVote) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{15} }

const Default_CLaunchVote_Code uint32 = 7014

func (m *CLaunchVote) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_CLaunchVote_Code
}

type SLaunchVote struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=7014" json:"code,omitempty"`
	Seat             *uint32 `protobuf:"varint,2,req,name=seat" json:"seat,omitempty"`
	Error            *uint32 `protobuf:"varint,3,opt,name=error" json:"error,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SLaunchVote) Reset()                    { *m = SLaunchVote{} }
func (m *SLaunchVote) String() string            { return proto.CompactTextString(m) }
func (*SLaunchVote) ProtoMessage()               {}
func (*SLaunchVote) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{16} }

const Default_SLaunchVote_Code uint32 = 7014

func (m *SLaunchVote) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_SLaunchVote_Code
}

func (m *SLaunchVote) GetSeat() uint32 {
	if m != nil && m.Seat != nil {
		return *m.Seat
	}
	return 0
}

func (m *SLaunchVote) GetError() uint32 {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return 0
}

// 私人局,发起投票,投票解散房间,如果投票成功，服务器主动推送SKick协议，并且reason字段值为1
type CVote struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=7015" json:"code,omitempty"`
	Vote             *uint32 `protobuf:"varint,2,req,name=vote" json:"vote,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CVote) Reset()                    { *m = CVote{} }
func (m *CVote) String() string            { return proto.CompactTextString(m) }
func (*CVote) ProtoMessage()               {}
func (*CVote) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{17} }

const Default_CVote_Code uint32 = 7015

func (m *CVote) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_CVote_Code
}

func (m *CVote) GetVote() uint32 {
	if m != nil && m.Vote != nil {
		return *m.Vote
	}
	return 0
}

type SVote struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=7015" json:"code,omitempty"`
	Vote             *uint32 `protobuf:"varint,2,req,name=vote" json:"vote,omitempty"`
	Seat             *uint32 `protobuf:"varint,3,req,name=seat" json:"seat,omitempty"`
	Error            *uint32 `protobuf:"varint,4,opt,name=error" json:"error,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SVote) Reset()                    { *m = SVote{} }
func (m *SVote) String() string            { return proto.CompactTextString(m) }
func (*SVote) ProtoMessage()               {}
func (*SVote) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{18} }

const Default_SVote_Code uint32 = 7015

func (m *SVote) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_SVote_Code
}

func (m *SVote) GetVote() uint32 {
	if m != nil && m.Vote != nil {
		return *m.Vote
	}
	return 0
}

func (m *SVote) GetSeat() uint32 {
	if m != nil && m.Seat != nil {
		return *m.Seat
	}
	return 0
}

func (m *SVote) GetError() uint32 {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return 0
}

// 投票解散房间事件结果,服务器主动推送
type SVoteResult struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=7016" json:"code,omitempty"`
	Vote             *uint32 `protobuf:"varint,2,req,name=vote" json:"vote,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SVoteResult) Reset()                    { *m = SVoteResult{} }
func (m *SVoteResult) String() string            { return proto.CompactTextString(m) }
func (*SVoteResult) ProtoMessage()               {}
func (*SVoteResult) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{19} }

const Default_SVoteResult_Code uint32 = 7016

func (m *SVoteResult) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_SVoteResult_Code
}

func (m *SVoteResult) GetVote() uint32 {
	if m != nil && m.Vote != nil {
		return *m.Vote
	}
	return 0
}

type CPrivateRecord struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=7017" json:"code,omitempty"`
	Page             *uint32 `protobuf:"varint,2,req,name=page" json:"page,omitempty"`
	PageMax          *uint32 `protobuf:"varint,3,req,name=pageMax" json:"pageMax,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CPrivateRecord) Reset()                    { *m = CPrivateRecord{} }
func (m *CPrivateRecord) String() string            { return proto.CompactTextString(m) }
func (*CPrivateRecord) ProtoMessage()               {}
func (*CPrivateRecord) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{20} }

const Default_CPrivateRecord_Code uint32 = 7017

func (m *CPrivateRecord) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_CPrivateRecord_Code
}

func (m *CPrivateRecord) GetPage() uint32 {
	if m != nil && m.Page != nil {
		return *m.Page
	}
	return 0
}

func (m *CPrivateRecord) GetPageMax() uint32 {
	if m != nil && m.PageMax != nil {
		return *m.PageMax
	}
	return 0
}

type SPrivateRecord struct {
	Code             *uint32          `protobuf:"varint,1,opt,name=code,def=7017" json:"code,omitempty"`
	List             []*PrivateRecord `protobuf:"bytes,2,rep,name=list" json:"list,omitempty"`
	Error            *uint32          `protobuf:"varint,3,opt,name=error,def=0" json:"error,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *SPrivateRecord) Reset()                    { *m = SPrivateRecord{} }
func (m *SPrivateRecord) String() string            { return proto.CompactTextString(m) }
func (*SPrivateRecord) ProtoMessage()               {}
func (*SPrivateRecord) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{21} }

const Default_SPrivateRecord_Code uint32 = 7017
const Default_SPrivateRecord_Error uint32 = 0

func (m *SPrivateRecord) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_SPrivateRecord_Code
}

func (m *SPrivateRecord) GetList() []*PrivateRecord {
	if m != nil {
		return m.List
	}
	return nil
}

func (m *SPrivateRecord) GetError() uint32 {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return Default_SPrivateRecord_Error
}

// 获取玩家的私人房间记录
type PrivateRecord struct {
	Time             *uint32                 `protobuf:"varint,1,req,name=time" json:"time,omitempty"`
	Rid              *uint32                 `protobuf:"varint,2,req,name=rid" json:"rid,omitempty"`
	Invitecode       *string                 `protobuf:"bytes,3,req,name=invitecode" json:"invitecode,omitempty"`
	Rname            *string                 `protobuf:"bytes,4,req,name=rname" json:"rname,omitempty"`
	Ante             *uint32                 `protobuf:"varint,5,req,name=ante" json:"ante,omitempty"`
	TotalRound       *uint32                 `protobuf:"varint,6,req,name=totalRound" json:"totalRound,omitempty"`
	Ma               *uint32                 `protobuf:"varint,7,req,name=ma" json:"ma,omitempty"`
	Coin             *int32                  `protobuf:"varint,8,req,name=coin" json:"coin,omitempty"`
	Round            *uint32                 `protobuf:"varint,9,req,name=round" json:"round,omitempty"`
	List             []*PrivateRecordDetails `protobuf:"bytes,10,rep,name=list" json:"list,omitempty"`
	Lists            []*PrivateRecords       `protobuf:"bytes,11,rep,name=lists" json:"lists,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *PrivateRecord) Reset()                    { *m = PrivateRecord{} }
func (m *PrivateRecord) String() string            { return proto.CompactTextString(m) }
func (*PrivateRecord) ProtoMessage()               {}
func (*PrivateRecord) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{22} }

func (m *PrivateRecord) GetTime() uint32 {
	if m != nil && m.Time != nil {
		return *m.Time
	}
	return 0
}

func (m *PrivateRecord) GetRid() uint32 {
	if m != nil && m.Rid != nil {
		return *m.Rid
	}
	return 0
}

func (m *PrivateRecord) GetInvitecode() string {
	if m != nil && m.Invitecode != nil {
		return *m.Invitecode
	}
	return ""
}

func (m *PrivateRecord) GetRname() string {
	if m != nil && m.Rname != nil {
		return *m.Rname
	}
	return ""
}

func (m *PrivateRecord) GetAnte() uint32 {
	if m != nil && m.Ante != nil {
		return *m.Ante
	}
	return 0
}

func (m *PrivateRecord) GetTotalRound() uint32 {
	if m != nil && m.TotalRound != nil {
		return *m.TotalRound
	}
	return 0
}

func (m *PrivateRecord) GetMa() uint32 {
	if m != nil && m.Ma != nil {
		return *m.Ma
	}
	return 0
}

func (m *PrivateRecord) GetCoin() int32 {
	if m != nil && m.Coin != nil {
		return *m.Coin
	}
	return 0
}

func (m *PrivateRecord) GetRound() uint32 {
	if m != nil && m.Round != nil {
		return *m.Round
	}
	return 0
}

func (m *PrivateRecord) GetList() []*PrivateRecordDetails {
	if m != nil {
		return m.List
	}
	return nil
}

func (m *PrivateRecord) GetLists() []*PrivateRecords {
	if m != nil {
		return m.Lists
	}
	return nil
}

type PrivateRecordDetails struct {
	Seat             *uint32 `protobuf:"varint,1,req,name=seat" json:"seat,omitempty"`
	Userid           *string `protobuf:"bytes,2,req,name=userid" json:"userid,omitempty"`
	Uname            *string `protobuf:"bytes,3,req,name=uname" json:"uname,omitempty"`
	Sex              *uint32 `protobuf:"varint,4,req,name=sex" json:"sex,omitempty"`
	Photo            *string `protobuf:"bytes,5,req,name=photo" json:"photo,omitempty"`
	Coin             *int32  `protobuf:"varint,6,req,name=coin" json:"coin,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *PrivateRecordDetails) Reset()                    { *m = PrivateRecordDetails{} }
func (m *PrivateRecordDetails) String() string            { return proto.CompactTextString(m) }
func (*PrivateRecordDetails) ProtoMessage()               {}
func (*PrivateRecordDetails) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{23} }

func (m *PrivateRecordDetails) GetSeat() uint32 {
	if m != nil && m.Seat != nil {
		return *m.Seat
	}
	return 0
}

func (m *PrivateRecordDetails) GetUserid() string {
	if m != nil && m.Userid != nil {
		return *m.Userid
	}
	return ""
}

func (m *PrivateRecordDetails) GetUname() string {
	if m != nil && m.Uname != nil {
		return *m.Uname
	}
	return ""
}

func (m *PrivateRecordDetails) GetSex() uint32 {
	if m != nil && m.Sex != nil {
		return *m.Sex
	}
	return 0
}

func (m *PrivateRecordDetails) GetPhoto() string {
	if m != nil && m.Photo != nil {
		return *m.Photo
	}
	return ""
}

func (m *PrivateRecordDetails) GetCoin() int32 {
	if m != nil && m.Coin != nil {
		return *m.Coin
	}
	return 0
}

// 一局一局展示协议
type PrivateRecords struct {
	Round            *uint32           `protobuf:"varint,1,req,name=round" json:"round,omitempty"`
	List             []*PrivateDetails `protobuf:"bytes,2,rep,name=list" json:"list,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *PrivateRecords) Reset()                    { *m = PrivateRecords{} }
func (m *PrivateRecords) String() string            { return proto.CompactTextString(m) }
func (*PrivateRecords) ProtoMessage()               {}
func (*PrivateRecords) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{24} }

func (m *PrivateRecords) GetRound() uint32 {
	if m != nil && m.Round != nil {
		return *m.Round
	}
	return 0
}

func (m *PrivateRecords) GetList() []*PrivateDetails {
	if m != nil {
		return m.List
	}
	return nil
}

// 当局输赢情况
type PrivateDetails struct {
	Uname            *string `protobuf:"bytes,1,req,name=uname" json:"uname,omitempty"`
	Coin             *int32  `protobuf:"varint,2,req,name=coin" json:"coin,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *PrivateDetails) Reset()                    { *m = PrivateDetails{} }
func (m *PrivateDetails) String() string            { return proto.CompactTextString(m) }
func (*PrivateDetails) ProtoMessage()               {}
func (*PrivateDetails) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{25} }

func (m *PrivateDetails) GetUname() string {
	if m != nil && m.Uname != nil {
		return *m.Uname
	}
	return ""
}

func (m *PrivateDetails) GetCoin() int32 {
	if m != nil && m.Coin != nil {
		return *m.Coin
	}
	return 0
}

//   根据私人房房间号,获取记录该房间所以记录
type CPRecordByRid struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=7019" json:"code,omitempty"`
	Rid              *uint32 `protobuf:"varint,2,req,name=rid" json:"rid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CPRecordByRid) Reset()                    { *m = CPRecordByRid{} }
func (m *CPRecordByRid) String() string            { return proto.CompactTextString(m) }
func (*CPRecordByRid) ProtoMessage()               {}
func (*CPRecordByRid) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{26} }

const Default_CPRecordByRid_Code uint32 = 7019

func (m *CPRecordByRid) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_CPRecordByRid_Code
}

func (m *CPRecordByRid) GetRid() uint32 {
	if m != nil && m.Rid != nil {
		return *m.Rid
	}
	return 0
}

type SPRecordByRid struct {
	Code             *uint32                 `protobuf:"varint,1,opt,name=code,def=7019" json:"code,omitempty"`
	Time             *uint32                 `protobuf:"varint,2,req,name=time" json:"time,omitempty"`
	Rid              *uint32                 `protobuf:"varint,3,req,name=rid" json:"rid,omitempty"`
	Invitecode       *string                 `protobuf:"bytes,4,req,name=invitecode" json:"invitecode,omitempty"`
	Rname            *string                 `protobuf:"bytes,5,req,name=rname" json:"rname,omitempty"`
	Ante             *uint32                 `protobuf:"varint,6,req,name=ante" json:"ante,omitempty"`
	TotalRound       *uint32                 `protobuf:"varint,7,req,name=totalRound" json:"totalRound,omitempty"`
	Ma               *uint32                 `protobuf:"varint,8,req,name=ma" json:"ma,omitempty"`
	List             []*PrivateRecordDetails `protobuf:"bytes,9,rep,name=list" json:"list,omitempty"`
	Error            *uint32                 `protobuf:"varint,10,opt,name=error,def=0" json:"error,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *SPRecordByRid) Reset()                    { *m = SPRecordByRid{} }
func (m *SPRecordByRid) String() string            { return proto.CompactTextString(m) }
func (*SPRecordByRid) ProtoMessage()               {}
func (*SPRecordByRid) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{27} }

const Default_SPRecordByRid_Code uint32 = 7019
const Default_SPRecordByRid_Error uint32 = 0

func (m *SPRecordByRid) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_SPRecordByRid_Code
}

func (m *SPRecordByRid) GetTime() uint32 {
	if m != nil && m.Time != nil {
		return *m.Time
	}
	return 0
}

func (m *SPRecordByRid) GetRid() uint32 {
	if m != nil && m.Rid != nil {
		return *m.Rid
	}
	return 0
}

func (m *SPRecordByRid) GetInvitecode() string {
	if m != nil && m.Invitecode != nil {
		return *m.Invitecode
	}
	return ""
}

func (m *SPRecordByRid) GetRname() string {
	if m != nil && m.Rname != nil {
		return *m.Rname
	}
	return ""
}

func (m *SPRecordByRid) GetAnte() uint32 {
	if m != nil && m.Ante != nil {
		return *m.Ante
	}
	return 0
}

func (m *SPRecordByRid) GetTotalRound() uint32 {
	if m != nil && m.TotalRound != nil {
		return *m.TotalRound
	}
	return 0
}

func (m *SPRecordByRid) GetMa() uint32 {
	if m != nil && m.Ma != nil {
		return *m.Ma
	}
	return 0
}

func (m *SPRecordByRid) GetList() []*PrivateRecordDetails {
	if m != nil {
		return m.List
	}
	return nil
}

func (m *SPRecordByRid) GetError() uint32 {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return Default_SPRecordByRid_Error
}

func init() {
	proto.RegisterType((*CEnterSocialRoom)(nil), "protocol.CEnterSocialRoom")
	proto.RegisterType((*SEnterSocialRoom)(nil), "protocol.SEnterSocialRoom")
	proto.RegisterType((*CPrivateLeave)(nil), "protocol.CPrivateLeave")
	proto.RegisterType((*SPrivateLeave)(nil), "protocol.SPrivateLeave")
	proto.RegisterType((*SReady)(nil), "protocol.SReady")
	proto.RegisterType((*CReady)(nil), "protocol.CReady")
	proto.RegisterType((*SPrivateOver)(nil), "protocol.SPrivateOver")
	proto.RegisterType((*PrivateScore)(nil), "protocol.PrivateScore")
	proto.RegisterType((*CCreatePrivateRoom)(nil), "protocol.CCreatePrivateRoom")
	proto.RegisterType((*SCreatePrivateRoom)(nil), "protocol.SCreatePrivateRoom")
	proto.RegisterType((*SStart)(nil), "protocol.SStart")
	proto.RegisterType((*CStartGame)(nil), "protocol.CStartGame")
	proto.RegisterType((*SStartGame)(nil), "protocol.SStartGame")
	proto.RegisterType((*CKick)(nil), "protocol.CKick")
	proto.RegisterType((*SKick)(nil), "protocol.SKick")
	proto.RegisterType((*CLaunchVote)(nil), "protocol.CLaunchVote")
	proto.RegisterType((*SLaunchVote)(nil), "protocol.SLaunchVote")
	proto.RegisterType((*CVote)(nil), "protocol.CVote")
	proto.RegisterType((*SVote)(nil), "protocol.SVote")
	proto.RegisterType((*SVoteResult)(nil), "protocol.SVoteResult")
	proto.RegisterType((*CPrivateRecord)(nil), "protocol.CPrivateRecord")
	proto.RegisterType((*SPrivateRecord)(nil), "protocol.SPrivateRecord")
	proto.RegisterType((*PrivateRecord)(nil), "protocol.PrivateRecord")
	proto.RegisterType((*PrivateRecordDetails)(nil), "protocol.PrivateRecordDetails")
	proto.RegisterType((*PrivateRecords)(nil), "protocol.PrivateRecords")
	proto.RegisterType((*PrivateDetails)(nil), "protocol.PrivateDetails")
	proto.RegisterType((*CPRecordByRid)(nil), "protocol.CPRecordByRid")
	proto.RegisterType((*SPRecordByRid)(nil), "protocol.SPRecordByRid")
}

var fileDescriptor10 = []byte{
	// 1008 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x8c, 0x55, 0xc1, 0x92, 0xdb, 0x44,
	0x10, 0x2d, 0xd9, 0x92, 0xd7, 0x6e, 0x5b, 0x1b, 0xef, 0x64, 0x09, 0x2a, 0x0e, 0x94, 0x22, 0x08,
	0x98, 0x22, 0x59, 0xbc, 0x0b, 0x24, 0x24, 0x07, 0xaa, 0x88, 0x16, 0x72, 0x48, 0x28, 0xb6, 0xac,
	0x82, 0x5b, 0x0e, 0x83, 0x34, 0xd8, 0x93, 0xd8, 0x1a, 0xd7, 0x68, 0xe4, 0xac, 0xef, 0x7c, 0x01,
	0x3f, 0x46, 0xf1, 0x25, 0xfc, 0x42, 0x6a, 0x5a, 0x1a, 0xd9, 0xb2, 0xe5, 0xec, 0x9e, 0x76, 0x35,
	0xee, 0xd7, 0xfd, 0x7a, 0xfa, 0xbd, 0x1e, 0x18, 0x66, 0x22, 0xe6, 0x74, 0x2e, 0x85, 0x58, 0x9c,
	0x2d, 0xa5, 0x50, 0x82, 0x74, 0xf1, 0x4f, 0x2c, 0xe6, 0x9f, 0x74, 0x57, 0xa2, 0x38, 0x0b, 0x9e,
	0xc1, 0x30, 0xfc, 0x39, 0x55, 0x4c, 0x46, 0x18, 0x3d, 0x11, 0x62, 0x41, 0x08, 0xd8, 0xb1, 0x48,
	0x98, 0x67, 0xf9, 0xd6, 0xc8, 0x7d, 0x66, 0x3f, 0x19, 0x8f, 0xcf, 0x09, 0x01, 0xe0, 0xe9, 0x8a,
	0x2b, 0x86, 0xbf, 0xb4, 0xfc, 0xd6, 0xa8, 0x17, 0xfc, 0xd7, 0x86, 0x61, 0x74, 0x1b, 0xf0, 0x10,
	0xba, 0x57, 0x22, 0xe3, 0x8a, 0x8b, 0x14, 0xa1, 0x2e, 0xf1, 0xc1, 0xd6, 0xc4, 0xbc, 0xb6, 0xdf,
	0x1a, 0xf5, 0x2f, 0xc8, 0x99, 0x61, 0x76, 0xa6, 0x73, 0x5c, 0x52, 0x45, 0xc9, 0x03, 0xe8, 0xe6,
	0x19, 0x93, 0x3c, 0xfd, 0x4b, 0x78, 0xb6, 0xdf, 0x1e, 0xf5, 0x2f, 0xee, 0x6e, 0xa2, 0xae, 0xf4,
	0x3f, 0xbf, 0x67, 0x4c, 0x92, 0x13, 0xe8, 0xfd, 0xc9, 0xa6, 0x3c, 0x4d, 0x79, 0x3a, 0xf5, 0x1c,
	0xbf, 0x35, 0xea, 0x6a, 0xaa, 0x31, 0x95, 0x49, 0x16, 0x8a, 0x3c, 0x55, 0x5e, 0x07, 0xeb, 0x0d,
	0xc0, 0x4e, 0x78, 0xcc, 0xbc, 0x23, 0xfc, 0x3a, 0x81, 0xde, 0x5b, 0x91, 0x4e, 0x8b, 0x80, 0x2e,
	0x1e, 0x11, 0x80, 0x19, 0x93, 0xe2, 0x0d, 0xcf, 0x18, 0x55, 0x5e, 0xcf, 0x9c, 0x25, 0xb9, 0x5a,
	0x97, 0x67, 0x80, 0x67, 0x01, 0x38, 0x98, 0xdc, 0xeb, 0x37, 0x72, 0x0a, 0xa9, 0x4c, 0x74, 0x31,
	0x95, 0xcb, 0xd4, 0x1b, 0x98, 0x62, 0x33, 0x9a, 0x26, 0x05, 0xca, 0xf5, 0x5b, 0xa3, 0x01, 0x71,
	0xc1, 0x59, 0xd1, 0x79, 0xce, 0xbc, 0x63, 0x13, 0xf1, 0x8e, 0xaa, 0x78, 0x86, 0x65, 0xee, 0xe0,
	0x91, 0x0b, 0x8e, 0x64, 0x34, 0x59, 0x7b, 0x43, 0x6c, 0xc9, 0x05, 0x27, 0x8b, 0x85, 0x64, 0xde,
	0x89, 0xdf, 0x1a, 0x39, 0x04, 0xa0, 0xb5, 0xa0, 0x1e, 0x31, 0x24, 0xe7, 0x34, 0x4f, 0xe3, 0x59,
	0xa4, 0xd1, 0x77, 0x4d, 0xc2, 0x95, 0x50, 0xec, 0xa7, 0xa9, 0x64, 0xcc, 0x3b, 0xf5, 0xdb, 0x23,
	0x97, 0x9c, 0xc2, 0x40, 0x1f, 0x5d, 0xf2, 0x8c, 0xe2, 0xe9, 0x47, 0x78, 0x3a, 0x04, 0x87, 0x49,
	0x29, 0xa4, 0x77, 0x0f, 0xa7, 0x65, 0x8d, 0x83, 0xcf, 0xc0, 0x0d, 0xaf, 0x24, 0x5f, 0x51, 0xc5,
	0x5e, 0x31, 0xba, 0x62, 0x0d, 0xf3, 0x7c, 0x1c, 0x84, 0xe0, 0x46, 0x37, 0x05, 0xe9, 0x5b, 0xc0,
	0x86, 0x8a, 0x81, 0x57, 0x95, 0xf4, 0xc4, 0xb1, 0xd2, 0x4b, 0xe8, 0x44, 0x13, 0xdd, 0x63, 0x03,
	0xfa, 0x87, 0x1d, 0x74, 0x75, 0x1d, 0x6d, 0xbc, 0x8e, 0x2a, 0x99, 0x6d, 0x68, 0x7f, 0x0d, 0x9d,
	0xf0, 0x70, 0xb2, 0x0a, 0xae, 0xb3, 0x75, 0x83, 0xbf, 0x2d, 0x18, 0x18, 0xfe, 0xbf, 0xad, 0x98,
	0x6c, 0xc0, 0x3c, 0x25, 0x7d, 0x68, 0xc7, 0x3c, 0x29, 0xeb, 0x1f, 0x43, 0x47, 0xcb, 0x95, 0x27,
	0x05, 0x7d, 0x4c, 0x28, 0xf2, 0x34, 0xf1, 0x6c, 0xf3, 0x33, 0xbb, 0x5e, 0x72, 0xc9, 0x50, 0x81,
	0x2e, 0xf9, 0x1c, 0xec, 0x39, 0xcf, 0xb4, 0xf6, 0xb4, 0x46, 0xee, 0x6d, 0x6b, 0x04, 0x8b, 0x46,
	0x7a, 0x96, 0xc1, 0x23, 0x18, 0x6c, 0x7f, 0xeb, 0x2c, 0xa8, 0xf8, 0xc4, 0xb3, 0xb4, 0xbd, 0x36,
	0x43, 0xd7, 0x1c, 0x9c, 0xe0, 0x1f, 0x0b, 0x48, 0x18, 0x4a, 0x46, 0x15, 0x2b, 0x61, 0xcd, 0x7e,
	0x3b, 0x1f, 0x23, 0xbd, 0x94, 0x2e, 0x4a, 0x9f, 0xe2, 0xa7, 0x5a, 0x2f, 0x59, 0x49, 0x7e, 0x08,
	0xdd, 0x7c, 0x99, 0x88, 0x77, 0xe9, 0x1b, 0x5e, 0xf2, 0x1f, 0x80, 0x4d, 0x53, 0x65, 0xd8, 0x57,
	0xcd, 0x15, 0xd6, 0xb9, 0x03, 0x47, 0x4b, 0xba, 0x5e, 0xb0, 0x54, 0x95, 0xee, 0x29, 0xd4, 0x87,
	0xb6, 0x09, 0x5e, 0x03, 0x89, 0x6e, 0xc7, 0xe9, 0x3e, 0x38, 0x32, 0xa1, 0x8a, 0x22, 0xa7, 0x66,
	0xcb, 0x6f, 0x69, 0xa4, 0x1c, 0xeb, 0x43, 0xe8, 0x44, 0x91, 0xa2, 0x52, 0x35, 0xa4, 0x3c, 0xc7,
	0xa9, 0xb0, 0x2c, 0x9f, 0x97, 0x2a, 0x09, 0x7c, 0x80, 0x10, 0xa3, 0x5f, 0xd0, 0x45, 0x83, 0x26,
	0xcf, 0x2f, 0x82, 0xe7, 0x00, 0xd1, 0x07, 0x23, 0x76, 0x73, 0x36, 0x70, 0xfa, 0x0a, 0x9c, 0xf0,
	0x25, 0x8f, 0xdf, 0x36, 0xc0, 0xbf, 0xad, 0xcb, 0x36, 0x10, 0xe0, 0x44, 0x07, 0x43, 0x77, 0x2b,
	0x19, 0x68, 0xdb, 0xd8, 0x7a, 0x6b, 0xdf, 0xda, 0x38, 0x47, 0x44, 0xd0, 0x4c, 0xa4, 0xe5, 0xa0,
	0x2a, 0x6e, 0x1d, 0xc3, 0xed, 0x3e, 0xf4, 0xc3, 0x57, 0xb8, 0x0d, 0xfe, 0x10, 0xaa, 0xa9, 0xc1,
	0xef, 0x82, 0x1f, 0xa1, 0x1f, 0x7d, 0x38, 0x64, 0xdf, 0x7b, 0x5b, 0x37, 0x80, 0xed, 0x1f, 0x40,
	0x7e, 0xaf, 0x91, 0x7a, 0xcb, 0x94, 0xed, 0xff, 0x02, 0x4e, 0x74, 0xbb, 0xd0, 0x9d, 0xe6, 0xdd,
	0x9a, 0xbf, 0x83, 0x6f, 0xa0, 0x8f, 0x79, 0x26, 0x78, 0x5d, 0x0d, 0xd9, 0x1e, 0xef, 0x14, 0x0e,
	0xe1, 0xd8, 0x2c, 0xb1, 0x09, 0x8b, 0x85, 0x4c, 0x1a, 0x30, 0x4f, 0x34, 0x66, 0x49, 0xa7, 0x86,
	0x01, 0xca, 0x7c, 0xca, 0x7e, 0xa5, 0xd7, 0x05, 0x89, 0xe0, 0x35, 0x1c, 0x47, 0x37, 0x27, 0x79,
	0x50, 0x5a, 0xbd, 0x85, 0x56, 0xff, 0x78, 0xcf, 0xea, 0x25, 0x74, 0x5f, 0x46, 0xff, 0x5b, 0xe0,
	0xd6, 0x63, 0xf4, 0xb3, 0xc1, 0x17, 0x0c, 0xdd, 0xef, 0xea, 0xfd, 0x23, 0xab, 0xfd, 0x53, 0x57,
	0x43, 0xbb, 0x72, 0x35, 0x9a, 0xbc, 0x10, 0x47, 0xdd, 0xc3, 0x04, 0x40, 0x09, 0xa5, 0x9f, 0xe4,
	0x8d, 0x91, 0x0b, 0xdf, 0x1e, 0x99, 0xfb, 0x8e, 0x05, 0x4f, 0xd1, 0xc5, 0xce, 0xc6, 0xf1, 0xc5,
	0xbb, 0xf7, 0xb0, 0xec, 0x09, 0xb0, 0xa7, 0x4f, 0x0f, 0xf4, 0x74, 0xc9, 0x14, 0xe5, 0xf3, 0x8c,
	0x7c, 0x09, 0x8e, 0x8e, 0x36, 0x2f, 0xa2, 0x77, 0x20, 0x3c, 0x0b, 0x16, 0x70, 0xda, 0x98, 0xc0,
	0xcc, 0xde, 0x32, 0xbb, 0xb4, 0xdc, 0x82, 0xd5, 0xf2, 0xca, 0xb1, 0xcd, 0xa2, 0xeb, 0x3e, 0xb4,
	0x33, 0x76, 0x5d, 0xee, 0x2d, 0x17, 0x9c, 0xe5, 0x4c, 0x28, 0x81, 0x4d, 0xf7, 0xaa, 0xa6, 0x3a,
	0xb8, 0x2f, 0x5f, 0xc0, 0x71, 0x9d, 0xc0, 0xa6, 0xcd, 0xa2, 0xd2, 0x17, 0xb5, 0xd1, 0xed, 0xf3,
	0x2e, 0xf9, 0x05, 0x8f, 0xaa, 0x44, 0x86, 0x71, 0xc5, 0xc9, 0xaa, 0xd5, 0x2d, 0xf6, 0xf4, 0x58,
	0xbf, 0xa0, 0x45, 0xc9, 0xe7, 0xeb, 0x09, 0x6f, 0x92, 0xcd, 0xd3, 0xda, 0x74, 0x83, 0x7f, 0x2d,
	0xfd, 0x9e, 0xde, 0x04, 0x31, 0xf2, 0x68, 0x6d, 0xcb, 0xe3, 0xf0, 0xb2, 0xa8, 0xe4, 0xe1, 0xd4,
	0xe4, 0xd1, 0x69, 0x90, 0xc7, 0xde, 0x5a, 0xaf, 0x14, 0xd0, 0xbb, 0x95, 0x02, 0x2a, 0x71, 0x43,
	0x29, 0xee, 0xf7, 0x01, 0x00, 0x00, 0xff, 0xff, 0x37, 0xec, 0x69, 0xde, 0x7c, 0x0a, 0x00, 0x00,
}
