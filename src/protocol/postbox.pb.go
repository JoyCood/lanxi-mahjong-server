// Code generated by protoc-gen-go.
// source: postbox.proto
// DO NOT EDIT!

package protocol

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type CPost struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=7701" json:"code,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CPost) Reset()                    { *m = CPost{} }
func (m *CPost) String() string            { return proto.CompactTextString(m) }
func (*CPost) ProtoMessage()               {}
func (*CPost) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{0} }

const Default_CPost_Code uint32 = 7701

func (m *CPost) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_CPost_Code
}

type SPost struct {
	Code             *uint32        `protobuf:"varint,1,opt,name=code,def=7701" json:"code,omitempty"`
	Data             []*PostBoxData `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	Error            *uint32        `protobuf:"varint,3,opt,name=error,def=0" json:"error,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *SPost) Reset()                    { *m = SPost{} }
func (m *SPost) String() string            { return proto.CompactTextString(m) }
func (*SPost) ProtoMessage()               {}
func (*SPost) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{1} }

const Default_SPost_Code uint32 = 7701
const Default_SPost_Error uint32 = 0

func (m *SPost) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_SPost_Code
}

func (m *SPost) GetData() []*PostBoxData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *SPost) GetError() uint32 {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return Default_SPost_Error
}

type CDelPost struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=7702" json:"code,omitempty"`
	Postid           *uint32 `protobuf:"varint,2,req,name=postid" json:"postid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDelPost) Reset()                    { *m = CDelPost{} }
func (m *CDelPost) String() string            { return proto.CompactTextString(m) }
func (*CDelPost) ProtoMessage()               {}
func (*CDelPost) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{2} }

const Default_CDelPost_Code uint32 = 7702

func (m *CDelPost) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_CDelPost_Code
}

func (m *CDelPost) GetPostid() uint32 {
	if m != nil && m.Postid != nil {
		return *m.Postid
	}
	return 0
}

type SDelPost struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=7702" json:"code,omitempty"`
	Postid           *uint32 `protobuf:"varint,2,req,name=postid" json:"postid,omitempty"`
	Error            *uint32 `protobuf:"varint,3,opt,name=error,def=0" json:"error,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SDelPost) Reset()                    { *m = SDelPost{} }
func (m *SDelPost) String() string            { return proto.CompactTextString(m) }
func (*SDelPost) ProtoMessage()               {}
func (*SDelPost) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{3} }

const Default_SDelPost_Code uint32 = 7702
const Default_SDelPost_Error uint32 = 0

func (m *SDelPost) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_SDelPost_Code
}

func (m *SDelPost) GetPostid() uint32 {
	if m != nil && m.Postid != nil {
		return *m.Postid
	}
	return 0
}

func (m *SDelPost) GetError() uint32 {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return Default_SDelPost_Error
}

type CDelReadPost struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=7703" json:"code,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDelReadPost) Reset()                    { *m = CDelReadPost{} }
func (m *CDelReadPost) String() string            { return proto.CompactTextString(m) }
func (*CDelReadPost) ProtoMessage()               {}
func (*CDelReadPost) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{4} }

const Default_CDelReadPost_Code uint32 = 7703

func (m *CDelReadPost) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_CDelReadPost_Code
}

type SDelReadPost struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=7703" json:"code,omitempty"`
	Error            *uint32 `protobuf:"varint,2,opt,name=error,def=0" json:"error,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SDelReadPost) Reset()                    { *m = SDelReadPost{} }
func (m *SDelReadPost) String() string            { return proto.CompactTextString(m) }
func (*SDelReadPost) ProtoMessage()               {}
func (*SDelReadPost) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{5} }

const Default_SDelReadPost_Code uint32 = 7703
const Default_SDelReadPost_Error uint32 = 0

func (m *SDelReadPost) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_SDelReadPost_Code
}

func (m *SDelReadPost) GetError() uint32 {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return Default_SDelReadPost_Error
}

type CDelAllPost struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=7704" json:"code,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDelAllPost) Reset()                    { *m = CDelAllPost{} }
func (m *CDelAllPost) String() string            { return proto.CompactTextString(m) }
func (*CDelAllPost) ProtoMessage()               {}
func (*CDelAllPost) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{6} }

const Default_CDelAllPost_Code uint32 = 7704

func (m *CDelAllPost) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_CDelAllPost_Code
}

type SDelAllPost struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=7704" json:"code,omitempty"`
	Error            *uint32 `protobuf:"varint,2,opt,name=error,def=0" json:"error,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SDelAllPost) Reset()                    { *m = SDelAllPost{} }
func (m *SDelAllPost) String() string            { return proto.CompactTextString(m) }
func (*SDelAllPost) ProtoMessage()               {}
func (*SDelAllPost) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{7} }

const Default_SDelAllPost_Code uint32 = 7704
const Default_SDelAllPost_Error uint32 = 0

func (m *SDelAllPost) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_SDelAllPost_Code
}

func (m *SDelAllPost) GetError() uint32 {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return Default_SDelAllPost_Error
}

type COpenAppendix struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=7705" json:"code,omitempty"`
	Postid           *uint32 `protobuf:"varint,2,req,name=postid" json:"postid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *COpenAppendix) Reset()                    { *m = COpenAppendix{} }
func (m *COpenAppendix) String() string            { return proto.CompactTextString(m) }
func (*COpenAppendix) ProtoMessage()               {}
func (*COpenAppendix) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{8} }

const Default_COpenAppendix_Code uint32 = 7705

func (m *COpenAppendix) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_COpenAppendix_Code
}

func (m *COpenAppendix) GetPostid() uint32 {
	if m != nil && m.Postid != nil {
		return *m.Postid
	}
	return 0
}

type SOpenAppendix struct {
	Code             *uint32           `protobuf:"varint,1,opt,name=code,def=7705" json:"code,omitempty"`
	Data             *PostAppendixData `protobuf:"bytes,2,req,name=data" json:"data,omitempty"`
	Error            *uint32           `protobuf:"varint,3,opt,name=error,def=0" json:"error,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *SOpenAppendix) Reset()                    { *m = SOpenAppendix{} }
func (m *SOpenAppendix) String() string            { return proto.CompactTextString(m) }
func (*SOpenAppendix) ProtoMessage()               {}
func (*SOpenAppendix) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{9} }

const Default_SOpenAppendix_Code uint32 = 7705
const Default_SOpenAppendix_Error uint32 = 0

func (m *SOpenAppendix) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_SOpenAppendix_Code
}

func (m *SOpenAppendix) GetData() *PostAppendixData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *SOpenAppendix) GetError() uint32 {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return Default_SOpenAppendix_Error
}

type CReadPost struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=7706" json:"code,omitempty"`
	Id               *uint32 `protobuf:"varint,2,req,name=id" json:"id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CReadPost) Reset()                    { *m = CReadPost{} }
func (m *CReadPost) String() string            { return proto.CompactTextString(m) }
func (*CReadPost) ProtoMessage()               {}
func (*CReadPost) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{10} }

const Default_CReadPost_Code uint32 = 7706

func (m *CReadPost) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_CReadPost_Code
}

func (m *CReadPost) GetId() uint32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

type SReadPost struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=7706" json:"code,omitempty"`
	Id               *uint32 `protobuf:"varint,2,req,name=id" json:"id,omitempty"`
	Error            *uint32 `protobuf:"varint,3,opt,name=error,def=0" json:"error,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SReadPost) Reset()                    { *m = SReadPost{} }
func (m *SReadPost) String() string            { return proto.CompactTextString(m) }
func (*SReadPost) ProtoMessage()               {}
func (*SReadPost) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{11} }

const Default_SReadPost_Code uint32 = 7706
const Default_SReadPost_Error uint32 = 0

func (m *SReadPost) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_SReadPost_Code
}

func (m *SReadPost) GetId() uint32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *SReadPost) GetError() uint32 {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return Default_SReadPost_Error
}

func init() {
	proto.RegisterType((*CPost)(nil), "protocol.CPost")
	proto.RegisterType((*SPost)(nil), "protocol.SPost")
	proto.RegisterType((*CDelPost)(nil), "protocol.CDelPost")
	proto.RegisterType((*SDelPost)(nil), "protocol.SDelPost")
	proto.RegisterType((*CDelReadPost)(nil), "protocol.CDelReadPost")
	proto.RegisterType((*SDelReadPost)(nil), "protocol.SDelReadPost")
	proto.RegisterType((*CDelAllPost)(nil), "protocol.CDelAllPost")
	proto.RegisterType((*SDelAllPost)(nil), "protocol.SDelAllPost")
	proto.RegisterType((*COpenAppendix)(nil), "protocol.COpenAppendix")
	proto.RegisterType((*SOpenAppendix)(nil), "protocol.SOpenAppendix")
	proto.RegisterType((*CReadPost)(nil), "protocol.CReadPost")
	proto.RegisterType((*SReadPost)(nil), "protocol.SReadPost")
}

var fileDescriptor6 = []byte{
	// 273 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x94, 0x91, 0x51, 0x4b, 0xc3, 0x30,
	0x14, 0x85, 0x69, 0xd6, 0x4a, 0x77, 0xbb, 0x8a, 0x04, 0x84, 0x32, 0x5f, 0x6a, 0x7c, 0x09, 0x08,
	0x65, 0xb6, 0xd3, 0x81, 0x20, 0x38, 0xbb, 0x77, 0x65, 0xf9, 0x01, 0x12, 0x97, 0x3c, 0x0c, 0xca,
	0x6e, 0xe8, 0x82, 0xf4, 0xe7, 0x4b, 0x27, 0x9d, 0xc8, 0x9a, 0x4d, 0x9f, 0x0a, 0xcd, 0x39, 0xdf,
	0x39, 0xdc, 0x03, 0xb1, 0xc1, 0xad, 0xfd, 0xc0, 0x26, 0x33, 0x35, 0x5a, 0xa4, 0xe1, 0xee, 0xb3,
	0xc2, 0x6a, 0x1c, 0x7e, 0xe2, 0xf7, 0x3f, 0x76, 0x05, 0x41, 0xf9, 0x86, 0x5b, 0x4b, 0x29, 0xf8,
	0x2b, 0x54, 0x3a, 0xf1, 0x52, 0x8f, 0xc7, 0x8f, 0xfe, 0x6c, 0x36, 0xb9, 0x63, 0x4b, 0x08, 0x84,
	0xeb, 0x91, 0xde, 0x80, 0xaf, 0xa4, 0x95, 0x09, 0x49, 0x07, 0x3c, 0xca, 0x2f, 0xb3, 0x0e, 0x9e,
	0xb5, 0x8e, 0x17, 0x6c, 0x16, 0xd2, 0x4a, 0x7a, 0x01, 0x81, 0xae, 0x6b, 0xac, 0x93, 0xc1, 0xce,
	0xe9, 0x4d, 0x58, 0x06, 0x61, 0xb9, 0xd0, 0x95, 0x03, 0x9b, 0xd3, 0x73, 0x38, 0x6b, 0x5b, 0xaf,
	0x55, 0x42, 0x52, 0xc2, 0x63, 0xf6, 0x0c, 0xa1, 0xf8, 0x87, 0xbe, 0x27, 0x91, 0xc1, 0xa8, 0x4d,
	0x5c, 0x6a, 0xa9, 0x1c, 0x94, 0x82, 0x4d, 0x61, 0x24, 0x4e, 0x68, 0x7e, 0xc8, 0xa4, 0x23, 0x5f,
	0x43, 0xd4, 0x92, 0xe7, 0x95, 0xab, 0xde, 0x94, 0x15, 0x10, 0x89, 0xe3, 0x92, 0x1e, 0x6e, 0x01,
	0x71, 0xf9, 0x6a, 0xf4, 0x66, 0x6e, 0x8c, 0xde, 0xa8, 0x75, 0xd3, 0x63, 0xbb, 0x3f, 0x38, 0xd4,
	0x3b, 0xc4, 0xe2, 0xa4, 0x89, 0xef, 0x47, 0x23, 0x3c, 0xca, 0xc7, 0xbf, 0x47, 0xeb, 0x9c, 0x8e,
	0xe5, 0x6e, 0x61, 0x58, 0x1e, 0x39, 0xd0, 0x03, 0x05, 0x20, 0xfb, 0x36, 0x4f, 0x30, 0x14, 0x7f,
	0x15, 0x1f, 0x66, 0x7d, 0x05, 0x00, 0x00, 0xff, 0xff, 0xe6, 0x38, 0x39, 0x0e, 0xba, 0x02, 0x00,
	0x00,
}
