// Code generated by protoc-gen-go.
// source: room.proto
// DO NOT EDIT!

package protocol

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// 匹配并进入房间
type CComein struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=2000" json:"code,omitempty"`
	Rtype            *uint32 `protobuf:"varint,2,req,name=rtype" json:"rtype,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CComein) Reset()                    { *m = CComein{} }
func (m *CComein) String() string            { return proto.CompactTextString(m) }
func (*CComein) ProtoMessage()               {}
func (*CComein) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{0} }

const Default_CComein_Code uint32 = 2000

func (m *CComein) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_CComein_Code
}

func (m *CComein) GetRtype() uint32 {
	if m != nil && m.Rtype != nil {
		return *m.Rtype
	}
	return 0
}

// 玩家进入房间，如果成功，会广播房间其他玩家
type SComein struct {
	Code             *uint32      `protobuf:"varint,1,opt,name=code,def=2000" json:"code,omitempty"`
	Position         *uint32      `protobuf:"varint,2,req,name=Position" json:"Position,omitempty"`
	Room             *ProtoRoom   `protobuf:"bytes,3,req,name=room" json:"room,omitempty"`
	Userinfo         []*ProtoUser `protobuf:"bytes,4,rep,name=userinfo" json:"userinfo,omitempty"`
	Rtype            *uint32      `protobuf:"varint,5,req,name=rtype" json:"rtype,omitempty"`
	Error            *uint32      `protobuf:"varint,6,opt,name=error,def=0" json:"error,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *SComein) Reset()                    { *m = SComein{} }
func (m *SComein) String() string            { return proto.CompactTextString(m) }
func (*SComein) ProtoMessage()               {}
func (*SComein) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{1} }

const Default_SComein_Code uint32 = 2000
const Default_SComein_Error uint32 = 0

func (m *SComein) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_SComein_Code
}

func (m *SComein) GetPosition() uint32 {
	if m != nil && m.Position != nil {
		return *m.Position
	}
	return 0
}

func (m *SComein) GetRoom() *ProtoRoom {
	if m != nil {
		return m.Room
	}
	return nil
}

func (m *SComein) GetUserinfo() []*ProtoUser {
	if m != nil {
		return m.Userinfo
	}
	return nil
}

func (m *SComein) GetRtype() uint32 {
	if m != nil && m.Rtype != nil {
		return *m.Rtype
	}
	return 0
}

func (m *SComein) GetError() uint32 {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return Default_SComein_Error
}

// 其他玩家进入房间
type SOtherComein struct {
	Code             *uint32    `protobuf:"varint,1,opt,name=code,def=2001" json:"code,omitempty"`
	Userinfo         *ProtoUser `protobuf:"bytes,2,req,name=userinfo" json:"userinfo,omitempty"`
	Error            *uint32    `protobuf:"varint,3,opt,name=error,def=0" json:"error,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *SOtherComein) Reset()                    { *m = SOtherComein{} }
func (m *SOtherComein) String() string            { return proto.CompactTextString(m) }
func (*SOtherComein) ProtoMessage()               {}
func (*SOtherComein) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{2} }

const Default_SOtherComein_Code uint32 = 2001
const Default_SOtherComein_Error uint32 = 0

func (m *SOtherComein) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_SOtherComein_Code
}

func (m *SOtherComein) GetUserinfo() *ProtoUser {
	if m != nil {
		return m.Userinfo
	}
	return nil
}

func (m *SOtherComein) GetError() uint32 {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return Default_SOtherComein_Error
}

// 打庄
type SZhuang struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=2002" json:"code,omitempty"`
	Zhuang           *uint32 `protobuf:"varint,2,req,name=zhuang" json:"zhuang,omitempty"`
	Lian             *uint32 `protobuf:"varint,3,req,name=lian" json:"lian,omitempty"`
	Watchseat        *uint32 `protobuf:"varint,4,req,name=watchseat" json:"watchseat,omitempty"`
	Error            *uint32 `protobuf:"varint,5,opt,name=error,def=0" json:"error,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SZhuang) Reset()                    { *m = SZhuang{} }
func (m *SZhuang) String() string            { return proto.CompactTextString(m) }
func (*SZhuang) ProtoMessage()               {}
func (*SZhuang) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{3} }

const Default_SZhuang_Code uint32 = 2002
const Default_SZhuang_Error uint32 = 0

func (m *SZhuang) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_SZhuang_Code
}

func (m *SZhuang) GetZhuang() uint32 {
	if m != nil && m.Zhuang != nil {
		return *m.Zhuang
	}
	return 0
}

func (m *SZhuang) GetLian() uint32 {
	if m != nil && m.Lian != nil {
		return *m.Lian
	}
	return 0
}

func (m *SZhuang) GetWatchseat() uint32 {
	if m != nil && m.Watchseat != nil {
		return *m.Watchseat
	}
	return 0
}

func (m *SZhuang) GetError() uint32 {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return Default_SZhuang_Error
}

// 进入指定房间 响应2000
type CComeinRoomid struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=2003" json:"code,omitempty"`
	Roomid           *uint32 `protobuf:"varint,2,req,name=roomid" json:"roomid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CComeinRoomid) Reset()                    { *m = CComeinRoomid{} }
func (m *CComeinRoomid) String() string            { return proto.CompactTextString(m) }
func (*CComeinRoomid) ProtoMessage()               {}
func (*CComeinRoomid) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{4} }

const Default_CComeinRoomid_Code uint32 = 2003

func (m *CComeinRoomid) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_CComeinRoomid_Code
}

func (m *CComeinRoomid) GetRoomid() uint32 {
	if m != nil && m.Roomid != nil {
		return *m.Roomid
	}
	return 0
}

// 等待玩家打骰子
type SWaitBroken struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=2008" json:"code,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SWaitBroken) Reset()                    { *m = SWaitBroken{} }
func (m *SWaitBroken) String() string            { return proto.CompactTextString(m) }
func (*SWaitBroken) ProtoMessage()               {}
func (*SWaitBroken) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{5} }

const Default_SWaitBroken_Code uint32 = 2008

func (m *SWaitBroken) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_SWaitBroken_Code
}

// 玩家打骰子
type CBroken struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=2007" json:"code,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CBroken) Reset()                    { *m = CBroken{} }
func (m *CBroken) String() string            { return proto.CompactTextString(m) }
func (*CBroken) ProtoMessage()               {}
func (*CBroken) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{6} }

const Default_CBroken_Code uint32 = 2007

func (m *CBroken) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_CBroken_Code
}

// 非广播接口(骰子数据合并到发牌广播数据里）
type SBroken struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=2007" json:"code,omitempty"`
	Error            *uint32 `protobuf:"varint,2,opt,name=error,def=0" json:"error,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SBroken) Reset()                    { *m = SBroken{} }
func (m *SBroken) String() string            { return proto.CompactTextString(m) }
func (*SBroken) ProtoMessage()               {}
func (*SBroken) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{7} }

const Default_SBroken_Code uint32 = 2007
const Default_SBroken_Error uint32 = 0

func (m *SBroken) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_SBroken_Code
}

func (m *SBroken) GetError() uint32 {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return Default_SBroken_Error
}

// 庄家发牌,包含两个骰子数字
type SZhuangDeal struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=2037" json:"code,omitempty"`
	Dice             *uint32 `protobuf:"varint,2,req,name=dice" json:"dice,omitempty"`
	Cards            []byte  `protobuf:"bytes,3,req,name=cards" json:"cards,omitempty"`
	Value            *uint32 `protobuf:"varint,4,opt,name=value" json:"value,omitempty"`
	Error            *uint32 `protobuf:"varint,5,opt,name=error,def=0" json:"error,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SZhuangDeal) Reset()                    { *m = SZhuangDeal{} }
func (m *SZhuangDeal) String() string            { return proto.CompactTextString(m) }
func (*SZhuangDeal) ProtoMessage()               {}
func (*SZhuangDeal) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{8} }

const Default_SZhuangDeal_Code uint32 = 2037
const Default_SZhuangDeal_Error uint32 = 0

func (m *SZhuangDeal) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_SZhuangDeal_Code
}

func (m *SZhuangDeal) GetDice() uint32 {
	if m != nil && m.Dice != nil {
		return *m.Dice
	}
	return 0
}

func (m *SZhuangDeal) GetCards() []byte {
	if m != nil {
		return m.Cards
	}
	return nil
}

func (m *SZhuangDeal) GetValue() uint32 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

func (m *SZhuangDeal) GetError() uint32 {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return Default_SZhuangDeal_Error
}

// 发牌,包含两个骰子数字
type SDeal struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=2004" json:"code,omitempty"`
	Dice             *uint32 `protobuf:"varint,2,req,name=dice" json:"dice,omitempty"`
	Cards            []byte  `protobuf:"bytes,3,req,name=cards" json:"cards,omitempty"`
	Value            *uint32 `protobuf:"varint,4,req,name=value" json:"value,omitempty"`
	Error            *uint32 `protobuf:"varint,5,req,name=error,def=0" json:"error,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SDeal) Reset()                    { *m = SDeal{} }
func (m *SDeal) String() string            { return proto.CompactTextString(m) }
func (*SDeal) ProtoMessage()               {}
func (*SDeal) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{9} }

const Default_SDeal_Code uint32 = 2004
const Default_SDeal_Error uint32 = 0

func (m *SDeal) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_SDeal_Code
}

func (m *SDeal) GetDice() uint32 {
	if m != nil && m.Dice != nil {
		return *m.Dice
	}
	return 0
}

func (m *SDeal) GetCards() []byte {
	if m != nil {
		return m.Cards
	}
	return nil
}

func (m *SDeal) GetValue() uint32 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

func (m *SDeal) GetError() uint32 {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return Default_SDeal_Error
}

// 抓牌
// 明杠  MING_KONG uint32 = 2 << 1
// 暗杠	AN_KONG   uint32 = 2 << 2
// 补杠 	BU_KONG   uint32 = 2 << 3
type SDraw struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=2005" json:"code,omitempty"`
	Card             *uint32 `protobuf:"varint,2,opt,name=card" json:"card,omitempty"`
	Value            *uint32 `protobuf:"varint,3,opt,name=value" json:"value,omitempty"`
	Kong             *uint32 `protobuf:"varint,4,opt,name=kong" json:"kong,omitempty"`
	Error            *uint32 `protobuf:"varint,5,opt,name=error,def=0" json:"error,omitempty"`
	Cards            []byte  `protobuf:"bytes,6,req,name=cards" json:"cards,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SDraw) Reset()                    { *m = SDraw{} }
func (m *SDraw) String() string            { return proto.CompactTextString(m) }
func (*SDraw) ProtoMessage()               {}
func (*SDraw) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{10} }

const Default_SDraw_Code uint32 = 2005
const Default_SDraw_Error uint32 = 0

func (m *SDraw) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_SDraw_Code
}

func (m *SDraw) GetCard() uint32 {
	if m != nil && m.Card != nil {
		return *m.Card
	}
	return 0
}

func (m *SDraw) GetValue() uint32 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

func (m *SDraw) GetKong() uint32 {
	if m != nil && m.Kong != nil {
		return *m.Kong
	}
	return 0
}

func (m *SDraw) GetError() uint32 {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return Default_SDraw_Error
}

func (m *SDraw) GetCards() []byte {
	if m != nil {
		return m.Cards
	}
	return nil
}

// 出牌
type CDiscard struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=2006" json:"code,omitempty"`
	Value            *uint32 `protobuf:"varint,2,req,name=value" json:"value,omitempty"`
	Card             *uint32 `protobuf:"varint,3,req,name=card" json:"card,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDiscard) Reset()                    { *m = CDiscard{} }
func (m *CDiscard) String() string            { return proto.CompactTextString(m) }
func (*CDiscard) ProtoMessage()               {}
func (*CDiscard) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{11} }

const Default_CDiscard_Code uint32 = 2006

func (m *CDiscard) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_CDiscard_Code
}

func (m *CDiscard) GetValue() uint32 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

func (m *CDiscard) GetCard() uint32 {
	if m != nil && m.Card != nil {
		return *m.Card
	}
	return 0
}

// 其他玩家摸牌
type SOtherDraw struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=2016" json:"code,omitempty"`
	Seat             *uint32 `protobuf:"varint,2,req,name=seat" json:"seat,omitempty"`
	Kong             *uint32 `protobuf:"varint,3,opt,name=kong" json:"kong,omitempty"`
	Error            *uint32 `protobuf:"varint,4,opt,name=error,def=0" json:"error,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SOtherDraw) Reset()                    { *m = SOtherDraw{} }
func (m *SOtherDraw) String() string            { return proto.CompactTextString(m) }
func (*SOtherDraw) ProtoMessage()               {}
func (*SOtherDraw) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{12} }

const Default_SOtherDraw_Code uint32 = 2016
const Default_SOtherDraw_Error uint32 = 0

func (m *SOtherDraw) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_SOtherDraw_Code
}

func (m *SOtherDraw) GetSeat() uint32 {
	if m != nil && m.Seat != nil {
		return *m.Seat
	}
	return 0
}

func (m *SOtherDraw) GetKong() uint32 {
	if m != nil && m.Kong != nil {
		return *m.Kong
	}
	return 0
}

func (m *SOtherDraw) GetError() uint32 {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return Default_SOtherDraw_Error
}

// 玩家出牌广播
type SDiscard struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=2006" json:"code,omitempty"`
	Seat             *uint32 `protobuf:"varint,2,req,name=seat" json:"seat,omitempty"`
	Card             *uint32 `protobuf:"varint,3,req,name=card" json:"card,omitempty"`
	Value            *uint32 `protobuf:"varint,4,req,name=value" json:"value,omitempty"`
	Ting             *uint32 `protobuf:"varint,5,req,name=ting" json:"ting,omitempty"`
	Error            *uint32 `protobuf:"varint,6,opt,name=error,def=0" json:"error,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SDiscard) Reset()                    { *m = SDiscard{} }
func (m *SDiscard) String() string            { return proto.CompactTextString(m) }
func (*SDiscard) ProtoMessage()               {}
func (*SDiscard) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{13} }

const Default_SDiscard_Code uint32 = 2006
const Default_SDiscard_Error uint32 = 0

func (m *SDiscard) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_SDiscard_Code
}

func (m *SDiscard) GetSeat() uint32 {
	if m != nil && m.Seat != nil {
		return *m.Seat
	}
	return 0
}

func (m *SDiscard) GetCard() uint32 {
	if m != nil && m.Card != nil {
		return *m.Card
	}
	return 0
}

func (m *SDiscard) GetValue() uint32 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

func (m *SDiscard) GetTing() uint32 {
	if m != nil && m.Ting != nil {
		return *m.Ting
	}
	return 0
}

func (m *SDiscard) GetError() uint32 {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return Default_SDiscard_Error
}

// 玩家碰杠操作
// 碰	PENG      uint32 = 2 << 0
// 明杠	MING_KONG uint32 = 2 << 1
// 暗杠	AN_KONG   uint32 = 2 << 2
// 补杠 	BU_KONG   uint32 = 2 << 3
type COperate struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=2012" json:"code,omitempty"`
	Card             *uint32 `protobuf:"varint,2,req,name=card" json:"card,omitempty"`
	Value            *uint32 `protobuf:"varint,3,req,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *COperate) Reset()                    { *m = COperate{} }
func (m *COperate) String() string            { return proto.CompactTextString(m) }
func (*COperate) ProtoMessage()               {}
func (*COperate) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{14} }

const Default_COperate_Code uint32 = 2012

func (m *COperate) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_COperate_Code
}

func (m *COperate) GetCard() uint32 {
	if m != nil && m.Card != nil {
		return *m.Card
	}
	return 0
}

func (m *COperate) GetValue() uint32 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

// 碰杠广播 ,胡牌不在这个接口返回
type SOperate struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=2012" json:"code,omitempty"`
	Seat             *uint32 `protobuf:"varint,2,req,name=seat" json:"seat,omitempty"`
	Beseat           *uint32 `protobuf:"varint,3,req,name=beseat" json:"beseat,omitempty"`
	Card             *uint32 `protobuf:"varint,4,req,name=card" json:"card,omitempty"`
	Dutycard         *uint32 `protobuf:"varint,5,req,name=dutycard" json:"dutycard,omitempty"`
	Value            *uint32 `protobuf:"varint,6,req,name=value" json:"value,omitempty"`
	Discontinue      *uint32 `protobuf:"varint,7,req,name=discontinue" json:"discontinue,omitempty"`
	Error            *uint32 `protobuf:"varint,8,opt,name=error,def=0" json:"error,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SOperate) Reset()                    { *m = SOperate{} }
func (m *SOperate) String() string            { return proto.CompactTextString(m) }
func (*SOperate) ProtoMessage()               {}
func (*SOperate) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{15} }

const Default_SOperate_Code uint32 = 2012
const Default_SOperate_Error uint32 = 0

func (m *SOperate) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_SOperate_Code
}

func (m *SOperate) GetSeat() uint32 {
	if m != nil && m.Seat != nil {
		return *m.Seat
	}
	return 0
}

func (m *SOperate) GetBeseat() uint32 {
	if m != nil && m.Beseat != nil {
		return *m.Beseat
	}
	return 0
}

func (m *SOperate) GetCard() uint32 {
	if m != nil && m.Card != nil {
		return *m.Card
	}
	return 0
}

func (m *SOperate) GetDutycard() uint32 {
	if m != nil && m.Dutycard != nil {
		return *m.Dutycard
	}
	return 0
}

func (m *SOperate) GetValue() uint32 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

func (m *SOperate) GetDiscontinue() uint32 {
	if m != nil && m.Discontinue != nil {
		return *m.Discontinue
	}
	return 0
}

func (m *SOperate) GetError() uint32 {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return Default_SOperate_Error
}

// 处理前面有玩家胡牌优先操作,如果该玩家跳过胡牌,此协议向有碰和明杠的玩家主动发送
type SPengKong struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=2013" json:"code,omitempty"`
	Seat             *uint32 `protobuf:"varint,2,req,name=seat" json:"seat,omitempty"`
	Card             *uint32 `protobuf:"varint,3,req,name=card" json:"card,omitempty"`
	Value            *uint32 `protobuf:"varint,4,req,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SPengKong) Reset()                    { *m = SPengKong{} }
func (m *SPengKong) String() string            { return proto.CompactTextString(m) }
func (*SPengKong) ProtoMessage()               {}
func (*SPengKong) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{16} }

const Default_SPengKong_Code uint32 = 2013

func (m *SPengKong) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_SPengKong_Code
}

func (m *SPengKong) GetSeat() uint32 {
	if m != nil && m.Seat != nil {
		return *m.Seat
	}
	return 0
}

func (m *SPengKong) GetCard() uint32 {
	if m != nil && m.Card != nil {
		return *m.Card
	}
	return 0
}

func (m *SPengKong) GetValue() uint32 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

// 玩家胡牌，如果成功，会广播房间其他玩家
type SHu struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=2030" json:"code,omitempty"`
	Seat             *uint32 `protobuf:"varint,2,req,name=seat" json:"seat,omitempty"`
	TargetSeat       *uint32 `protobuf:"varint,3,req,name=targetSeat" json:"targetSeat,omitempty"`
	Card             *uint32 `protobuf:"varint,4,req,name=card" json:"card,omitempty"`
	Error            *uint32 `protobuf:"varint,5,opt,name=error,def=0" json:"error,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SHu) Reset()                    { *m = SHu{} }
func (m *SHu) String() string            { return proto.CompactTextString(m) }
func (*SHu) ProtoMessage()               {}
func (*SHu) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{17} }

const Default_SHu_Code uint32 = 2030
const Default_SHu_Error uint32 = 0

func (m *SHu) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_SHu_Code
}

func (m *SHu) GetSeat() uint32 {
	if m != nil && m.Seat != nil {
		return *m.Seat
	}
	return 0
}

func (m *SHu) GetTargetSeat() uint32 {
	if m != nil && m.TargetSeat != nil {
		return *m.TargetSeat
	}
	return 0
}

func (m *SHu) GetCard() uint32 {
	if m != nil && m.Card != nil {
		return *m.Card
	}
	return 0
}

func (m *SHu) GetError() uint32 {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return Default_SHu_Error
}

// 胡牌独立接口,胡牌根碰杠接口分离，主要时胡牌算法比较复杂，单独方便处理, 代码量少
type CHu struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=2030" json:"code,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CHu) Reset()                    { *m = CHu{} }
func (m *CHu) String() string            { return proto.CompactTextString(m) }
func (*CHu) ProtoMessage()               {}
func (*CHu) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{18} }

const Default_CHu_Code uint32 = 2030

func (m *CHu) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_CHu_Code
}

// 玩家离开房间,游戏开始后调用本接口无效，或返回错误码
type CLeave struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=2014" json:"code,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CLeave) Reset()                    { *m = CLeave{} }
func (m *CLeave) String() string            { return proto.CompactTextString(m) }
func (*CLeave) ProtoMessage()               {}
func (*CLeave) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{19} }

const Default_CLeave_Code uint32 = 2014

func (m *CLeave) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_CLeave_Code
}

// 玩家离开房间,游戏开始后调用本接口无效，或返回错误码
// 如果接口调用成功会广播给房间的其他玩家
type SLeave struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=2014" json:"code,omitempty"`
	Seat             *uint32 `protobuf:"varint,2,req,name=seat" json:"seat,omitempty"`
	Error            *uint32 `protobuf:"varint,3,opt,name=error,def=0" json:"error,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SLeave) Reset()                    { *m = SLeave{} }
func (m *SLeave) String() string            { return proto.CompactTextString(m) }
func (*SLeave) ProtoMessage()               {}
func (*SLeave) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{20} }

const Default_SLeave_Code uint32 = 2014
const Default_SLeave_Error uint32 = 0

func (m *SLeave) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_SLeave_Code
}

func (m *SLeave) GetSeat() uint32 {
	if m != nil && m.Seat != nil {
		return *m.Seat
	}
	return 0
}

func (m *SLeave) GetError() uint32 {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return Default_SLeave_Error
}

// 断线重连进入房间
type CReComein struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=2024" json:"code,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CReComein) Reset()                    { *m = CReComein{} }
func (m *CReComein) String() string            { return proto.CompactTextString(m) }
func (*CReComein) ProtoMessage()               {}
func (*CReComein) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{21} }

const Default_CReComein_Code uint32 = 2024

func (m *CReComein) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_CReComein_Code
}

// 本接口不广播
type SReComein struct {
	Code             *uint32      `protobuf:"varint,1,opt,name=code,def=2024" json:"code,omitempty"`
	Position         *uint32      `protobuf:"varint,2,req,name=position" json:"position,omitempty"`
	CardsCount       *uint32      `protobuf:"varint,3,req,name=cardsCount" json:"cardsCount,omitempty"`
	Dice             *uint32      `protobuf:"varint,4,req,name=dice" json:"dice,omitempty"`
	KongCount        *uint32      `protobuf:"varint,5,req,name=kongCount" json:"kongCount,omitempty"`
	Herojiseat       *uint32      `protobuf:"varint,6,req,name=herojiseat" json:"herojiseat,omitempty"`
	Dutyjiseat       *uint32      `protobuf:"varint,7,req,name=dutyjiseat" json:"dutyjiseat,omitempty"`
	Room             *ProtoRoom   `protobuf:"bytes,8,req,name=room" json:"room,omitempty"`
	Handcards        []byte       `protobuf:"bytes,9,req,name=handcards" json:"handcards,omitempty"`
	Userinfo         []*ProtoUser `protobuf:"bytes,10,rep,name=userinfo" json:"userinfo,omitempty"`
	Cards            []*ProtoCard `protobuf:"bytes,11,rep,name=cards" json:"cards,omitempty"`
	Turn             *uint32      `protobuf:"varint,12,req,name=turn" json:"turn,omitempty"`
	Value            *uint32      `protobuf:"varint,13,req,name=value" json:"value,omitempty"`
	Ting             *uint32      `protobuf:"varint,14,req,name=ting" json:"ting,omitempty"`
	Matchid          *uint32      `protobuf:"varint,15,req,name=matchid" json:"matchid,omitempty"`
	Error            *uint32      `protobuf:"varint,16,opt,name=error,def=0" json:"error,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *SReComein) Reset()                    { *m = SReComein{} }
func (m *SReComein) String() string            { return proto.CompactTextString(m) }
func (*SReComein) ProtoMessage()               {}
func (*SReComein) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{22} }

const Default_SReComein_Code uint32 = 2024
const Default_SReComein_Error uint32 = 0

func (m *SReComein) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_SReComein_Code
}

func (m *SReComein) GetPosition() uint32 {
	if m != nil && m.Position != nil {
		return *m.Position
	}
	return 0
}

func (m *SReComein) GetCardsCount() uint32 {
	if m != nil && m.CardsCount != nil {
		return *m.CardsCount
	}
	return 0
}

func (m *SReComein) GetDice() uint32 {
	if m != nil && m.Dice != nil {
		return *m.Dice
	}
	return 0
}

func (m *SReComein) GetKongCount() uint32 {
	if m != nil && m.KongCount != nil {
		return *m.KongCount
	}
	return 0
}

func (m *SReComein) GetHerojiseat() uint32 {
	if m != nil && m.Herojiseat != nil {
		return *m.Herojiseat
	}
	return 0
}

func (m *SReComein) GetDutyjiseat() uint32 {
	if m != nil && m.Dutyjiseat != nil {
		return *m.Dutyjiseat
	}
	return 0
}

func (m *SReComein) GetRoom() *ProtoRoom {
	if m != nil {
		return m.Room
	}
	return nil
}

func (m *SReComein) GetHandcards() []byte {
	if m != nil {
		return m.Handcards
	}
	return nil
}

func (m *SReComein) GetUserinfo() []*ProtoUser {
	if m != nil {
		return m.Userinfo
	}
	return nil
}

func (m *SReComein) GetCards() []*ProtoCard {
	if m != nil {
		return m.Cards
	}
	return nil
}

func (m *SReComein) GetTurn() uint32 {
	if m != nil && m.Turn != nil {
		return *m.Turn
	}
	return 0
}

func (m *SReComein) GetValue() uint32 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

func (m *SReComein) GetTing() uint32 {
	if m != nil && m.Ting != nil {
		return *m.Ting
	}
	return 0
}

func (m *SReComein) GetMatchid() uint32 {
	if m != nil && m.Matchid != nil {
		return *m.Matchid
	}
	return 0
}

func (m *SReComein) GetError() uint32 {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return Default_SReComein_Error
}

// 结算广播接口，游戏结束
type SGameover struct {
	Code             *uint32       `protobuf:"varint,1,opt,name=code,def=2028" json:"code,omitempty"`
	HuType           *uint32       `protobuf:"varint,2,req,name=huType" json:"huType,omitempty"`
	PaoSeat          *uint32       `protobuf:"varint,3,req,name=paoSeat" json:"paoSeat,omitempty"`
	Data             []*ProtoCount `protobuf:"bytes,4,rep,name=data" json:"data,omitempty"`
	JiCard           *uint32       `protobuf:"varint,5,req,name=jiCard" json:"jiCard,omitempty"`
	AllMaCards       []byte        `protobuf:"bytes,6,req,name=allMaCards" json:"allMaCards,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *SGameover) Reset()                    { *m = SGameover{} }
func (m *SGameover) String() string            { return proto.CompactTextString(m) }
func (*SGameover) ProtoMessage()               {}
func (*SGameover) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{23} }

const Default_SGameover_Code uint32 = 2028

func (m *SGameover) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_SGameover_Code
}

func (m *SGameover) GetHuType() uint32 {
	if m != nil && m.HuType != nil {
		return *m.HuType
	}
	return 0
}

func (m *SGameover) GetPaoSeat() uint32 {
	if m != nil && m.PaoSeat != nil {
		return *m.PaoSeat
	}
	return 0
}

func (m *SGameover) GetData() []*ProtoCount {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *SGameover) GetJiCard() uint32 {
	if m != nil && m.JiCard != nil {
		return *m.JiCard
	}
	return 0
}

func (m *SGameover) GetAllMaCards() []byte {
	if m != nil {
		return m.AllMaCards
	}
	return nil
}

// 鸡牌提示(英雄鸡，固定鸡)
type SJI struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=2040" json:"code,omitempty"`
	Seat             *uint32 `protobuf:"varint,2,req,name=seat" json:"seat,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SJI) Reset()                    { *m = SJI{} }
func (m *SJI) String() string            { return proto.CompactTextString(m) }
func (*SJI) ProtoMessage()               {}
func (*SJI) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{24} }

const Default_SJI_Code uint32 = 2040

func (m *SJI) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_SJI_Code
}

func (m *SJI) GetSeat() uint32 {
	if m != nil && m.Seat != nil {
		return *m.Seat
	}
	return 0
}

// 房间广播文字聊天
type CBroadcastChatText struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=2043" json:"code,omitempty"`
	Content          []byte  `protobuf:"bytes,2,req,name=content" json:"content,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CBroadcastChatText) Reset()                    { *m = CBroadcastChatText{} }
func (m *CBroadcastChatText) String() string            { return proto.CompactTextString(m) }
func (*CBroadcastChatText) ProtoMessage()               {}
func (*CBroadcastChatText) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{25} }

const Default_CBroadcastChatText_Code uint32 = 2043

func (m *CBroadcastChatText) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_CBroadcastChatText_Code
}

func (m *CBroadcastChatText) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

// 房间广播语音聊天
type CBroadcastChat struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=2044" json:"code,omitempty"`
	Content          []byte  `protobuf:"bytes,2,req,name=content" json:"content,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CBroadcastChat) Reset()                    { *m = CBroadcastChat{} }
func (m *CBroadcastChat) String() string            { return proto.CompactTextString(m) }
func (*CBroadcastChat) ProtoMessage()               {}
func (*CBroadcastChat) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{26} }

const Default_CBroadcastChat_Code uint32 = 2044

func (m *CBroadcastChat) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_CBroadcastChat_Code
}

func (m *CBroadcastChat) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

// 广播文字聊天
type SBroadcastChatText struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=2043" json:"code,omitempty"`
	Seat             *uint32 `protobuf:"varint,2,req,name=seat" json:"seat,omitempty"`
	Content          []byte  `protobuf:"bytes,3,req,name=content" json:"content,omitempty"`
	Error            *uint32 `protobuf:"varint,4,opt,name=error,def=0" json:"error,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SBroadcastChatText) Reset()                    { *m = SBroadcastChatText{} }
func (m *SBroadcastChatText) String() string            { return proto.CompactTextString(m) }
func (*SBroadcastChatText) ProtoMessage()               {}
func (*SBroadcastChatText) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{27} }

const Default_SBroadcastChatText_Code uint32 = 2043
const Default_SBroadcastChatText_Error uint32 = 0

func (m *SBroadcastChatText) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_SBroadcastChatText_Code
}

func (m *SBroadcastChatText) GetSeat() uint32 {
	if m != nil && m.Seat != nil {
		return *m.Seat
	}
	return 0
}

func (m *SBroadcastChatText) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *SBroadcastChatText) GetError() uint32 {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return Default_SBroadcastChatText_Error
}

// 广播语音聊天
type SBroadcastChat struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=2044" json:"code,omitempty"`
	Seat             *uint32 `protobuf:"varint,2,req,name=seat" json:"seat,omitempty"`
	Content          []byte  `protobuf:"bytes,3,req,name=content" json:"content,omitempty"`
	Error            *uint32 `protobuf:"varint,4,opt,name=error,def=0" json:"error,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SBroadcastChat) Reset()                    { *m = SBroadcastChat{} }
func (m *SBroadcastChat) String() string            { return proto.CompactTextString(m) }
func (*SBroadcastChat) ProtoMessage()               {}
func (*SBroadcastChat) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{28} }

const Default_SBroadcastChat_Code uint32 = 2044
const Default_SBroadcastChat_Error uint32 = 0

func (m *SBroadcastChat) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_SBroadcastChat_Code
}

func (m *SBroadcastChat) GetSeat() uint32 {
	if m != nil && m.Seat != nil {
		return *m.Seat
	}
	return 0
}

func (m *SBroadcastChat) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *SBroadcastChat) GetError() uint32 {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return Default_SBroadcastChat_Error
}

// 天听牌
type CTing struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=2046" json:"code,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CTing) Reset()                    { *m = CTing{} }
func (m *CTing) String() string            { return proto.CompactTextString(m) }
func (*CTing) ProtoMessage()               {}
func (*CTing) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{29} }

const Default_CTing_Code uint32 = 2046

func (m *CTing) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_CTing_Code
}

// 天听广播接口
type STing struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=2046" json:"code,omitempty"`
	Seat             *uint32 `protobuf:"varint,2,req,name=seat" json:"seat,omitempty"`
	Value            *uint32 `protobuf:"varint,3,req,name=value" json:"value,omitempty"`
	Error            *uint32 `protobuf:"varint,4,opt,name=error,def=0" json:"error,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *STing) Reset()                    { *m = STing{} }
func (m *STing) String() string            { return proto.CompactTextString(m) }
func (*STing) ProtoMessage()               {}
func (*STing) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{30} }

const Default_STing_Code uint32 = 2046
const Default_STing_Error uint32 = 0

func (m *STing) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_STing_Code
}

func (m *STing) GetSeat() uint32 {
	if m != nil && m.Seat != nil {
		return *m.Seat
	}
	return 0
}

func (m *STing) GetValue() uint32 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

func (m *STing) GetError() uint32 {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return Default_STing_Error
}

// 抢杠
type CQiangKong struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=2048" json:"code,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CQiangKong) Reset()                    { *m = CQiangKong{} }
func (m *CQiangKong) String() string            { return proto.CompactTextString(m) }
func (*CQiangKong) ProtoMessage()               {}
func (*CQiangKong) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{31} }

const Default_CQiangKong_Code uint32 = 2048

func (m *CQiangKong) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_CQiangKong_Code
}

type SQiangKong struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=2048" json:"code,omitempty"`
	Seat             *uint32 `protobuf:"varint,2,req,name=seat" json:"seat,omitempty"`
	TargetSeat       *uint32 `protobuf:"varint,3,req,name=targetSeat" json:"targetSeat,omitempty"`
	Card             *uint32 `protobuf:"varint,4,req,name=card" json:"card,omitempty"`
	Error            *uint32 `protobuf:"varint,5,opt,name=error,def=0" json:"error,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SQiangKong) Reset()                    { *m = SQiangKong{} }
func (m *SQiangKong) String() string            { return proto.CompactTextString(m) }
func (*SQiangKong) ProtoMessage()               {}
func (*SQiangKong) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{32} }

const Default_SQiangKong_Code uint32 = 2048
const Default_SQiangKong_Error uint32 = 0

func (m *SQiangKong) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_SQiangKong_Code
}

func (m *SQiangKong) GetSeat() uint32 {
	if m != nil && m.Seat != nil {
		return *m.Seat
	}
	return 0
}

func (m *SQiangKong) GetTargetSeat() uint32 {
	if m != nil && m.TargetSeat != nil {
		return *m.TargetSeat
	}
	return 0
}

func (m *SQiangKong) GetCard() uint32 {
	if m != nil && m.Card != nil {
		return *m.Card
	}
	return 0
}

func (m *SQiangKong) GetError() uint32 {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return Default_SQiangKong_Error
}

// 获取场次人数
type CGetCount struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=2051" json:"code,omitempty"`
	Rtype            *uint32 `protobuf:"varint,2,req,name=rtype" json:"rtype,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CGetCount) Reset()                    { *m = CGetCount{} }
func (m *CGetCount) String() string            { return proto.CompactTextString(m) }
func (*CGetCount) ProtoMessage()               {}
func (*CGetCount) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{33} }

const Default_CGetCount_Code uint32 = 2051

func (m *CGetCount) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_CGetCount_Code
}

func (m *CGetCount) GetRtype() uint32 {
	if m != nil && m.Rtype != nil {
		return *m.Rtype
	}
	return 0
}

type SGetCount struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=2051" json:"code,omitempty"`
	Rtype            *uint32 `protobuf:"varint,2,req,name=rtype" json:"rtype,omitempty"`
	Count            *uint32 `protobuf:"varint,3,req,name=count" json:"count,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SGetCount) Reset()                    { *m = SGetCount{} }
func (m *SGetCount) String() string            { return proto.CompactTextString(m) }
func (*SGetCount) ProtoMessage()               {}
func (*SGetCount) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{34} }

const Default_SGetCount_Code uint32 = 2051

func (m *SGetCount) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_SGetCount_Code
}

func (m *SGetCount) GetRtype() uint32 {
	if m != nil && m.Rtype != nil {
		return *m.Rtype
	}
	return 0
}

func (m *SGetCount) GetCount() uint32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

// 托管
type CTrusteeship struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=2053" json:"code,omitempty"`
	Kind             *uint32 `protobuf:"varint,2,req,name=kind" json:"kind,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CTrusteeship) Reset()                    { *m = CTrusteeship{} }
func (m *CTrusteeship) String() string            { return proto.CompactTextString(m) }
func (*CTrusteeship) ProtoMessage()               {}
func (*CTrusteeship) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{35} }

const Default_CTrusteeship_Code uint32 = 2053

func (m *CTrusteeship) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_CTrusteeship_Code
}

func (m *CTrusteeship) GetKind() uint32 {
	if m != nil && m.Kind != nil {
		return *m.Kind
	}
	return 0
}

type STrusteeship struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=2053" json:"code,omitempty"`
	Kind             *uint32 `protobuf:"varint,2,req,name=kind" json:"kind,omitempty"`
	Seat             *uint32 `protobuf:"varint,3,req,name=seat" json:"seat,omitempty"`
	Error            *uint32 `protobuf:"varint,4,opt,name=error,def=0" json:"error,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *STrusteeship) Reset()                    { *m = STrusteeship{} }
func (m *STrusteeship) String() string            { return proto.CompactTextString(m) }
func (*STrusteeship) ProtoMessage()               {}
func (*STrusteeship) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{36} }

const Default_STrusteeship_Code uint32 = 2053
const Default_STrusteeship_Error uint32 = 0

func (m *STrusteeship) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_STrusteeship_Code
}

func (m *STrusteeship) GetKind() uint32 {
	if m != nil && m.Kind != nil {
		return *m.Kind
	}
	return 0
}

func (m *STrusteeship) GetSeat() uint32 {
	if m != nil && m.Seat != nil {
		return *m.Seat
	}
	return 0
}

func (m *STrusteeship) GetError() uint32 {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return Default_STrusteeship_Error
}

func init() {
	proto.RegisterType((*CComein)(nil), "protocol.CComein")
	proto.RegisterType((*SComein)(nil), "protocol.SComein")
	proto.RegisterType((*SOtherComein)(nil), "protocol.SOtherComein")
	proto.RegisterType((*SZhuang)(nil), "protocol.SZhuang")
	proto.RegisterType((*CComeinRoomid)(nil), "protocol.CComeinRoomid")
	proto.RegisterType((*SWaitBroken)(nil), "protocol.SWaitBroken")
	proto.RegisterType((*CBroken)(nil), "protocol.CBroken")
	proto.RegisterType((*SBroken)(nil), "protocol.SBroken")
	proto.RegisterType((*SZhuangDeal)(nil), "protocol.SZhuangDeal")
	proto.RegisterType((*SDeal)(nil), "protocol.SDeal")
	proto.RegisterType((*SDraw)(nil), "protocol.SDraw")
	proto.RegisterType((*CDiscard)(nil), "protocol.CDiscard")
	proto.RegisterType((*SOtherDraw)(nil), "protocol.SOtherDraw")
	proto.RegisterType((*SDiscard)(nil), "protocol.SDiscard")
	proto.RegisterType((*COperate)(nil), "protocol.COperate")
	proto.RegisterType((*SOperate)(nil), "protocol.SOperate")
	proto.RegisterType((*SPengKong)(nil), "protocol.SPengKong")
	proto.RegisterType((*SHu)(nil), "protocol.SHu")
	proto.RegisterType((*CHu)(nil), "protocol.CHu")
	proto.RegisterType((*CLeave)(nil), "protocol.CLeave")
	proto.RegisterType((*SLeave)(nil), "protocol.SLeave")
	proto.RegisterType((*CReComein)(nil), "protocol.CReComein")
	proto.RegisterType((*SReComein)(nil), "protocol.SReComein")
	proto.RegisterType((*SGameover)(nil), "protocol.SGameover")
	proto.RegisterType((*SJI)(nil), "protocol.SJI")
	proto.RegisterType((*CBroadcastChatText)(nil), "protocol.CBroadcastChatText")
	proto.RegisterType((*CBroadcastChat)(nil), "protocol.CBroadcastChat")
	proto.RegisterType((*SBroadcastChatText)(nil), "protocol.SBroadcastChatText")
	proto.RegisterType((*SBroadcastChat)(nil), "protocol.SBroadcastChat")
	proto.RegisterType((*CTing)(nil), "protocol.CTing")
	proto.RegisterType((*STing)(nil), "protocol.STing")
	proto.RegisterType((*CQiangKong)(nil), "protocol.CQiangKong")
	proto.RegisterType((*SQiangKong)(nil), "protocol.SQiangKong")
	proto.RegisterType((*CGetCount)(nil), "protocol.CGetCount")
	proto.RegisterType((*SGetCount)(nil), "protocol.SGetCount")
	proto.RegisterType((*CTrusteeship)(nil), "protocol.CTrusteeship")
	proto.RegisterType((*STrusteeship)(nil), "protocol.STrusteeship")
}

var fileDescriptor8 = []byte{
	// 943 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xac, 0x56, 0x4b, 0x73, 0xdb, 0x36,
	0x10, 0x1e, 0x49, 0xa4, 0x44, 0xad, 0x1e, 0x71, 0x98, 0x1e, 0xd8, 0xd7, 0x54, 0xc1, 0x4c, 0xa7,
	0x3e, 0x74, 0x5c, 0x59, 0x92, 0x1d, 0xf7, 0x75, 0x29, 0x32, 0x93, 0xd6, 0x7d, 0xc4, 0x0d, 0x9c,
	0xe9, 0xa4, 0x39, 0xb4, 0x88, 0x88, 0x4a, 0x88, 0x25, 0x42, 0x03, 0x82, 0x4e, 0xd3, 0x5f, 0xd0,
	0x73, 0x8f, 0xfd, 0x6f, 0xfd, 0x2f, 0x1d, 0x80, 0xa2, 0x28, 0x52, 0xa0, 0x62, 0xcf, 0xe4, 0x64,
	0x13, 0xd8, 0xfd, 0xf6, 0xdb, 0xc5, 0xb7, 0xbb, 0x02, 0x90, 0x42, 0x2c, 0x8f, 0x56, 0x52, 0x28,
	0xe1, 0x7b, 0xe6, 0xcf, 0x54, 0x2c, 0xde, 0xf3, 0xae, 0x45, 0x7a, 0x86, 0x3e, 0x85, 0x16, 0xc6,
	0x62, 0xc9, 0x78, 0xe4, 0xfb, 0xe0, 0x4c, 0x45, 0xc8, 0x82, 0xda, 0xa0, 0x76, 0xd8, 0xfb, 0xc2,
	0x19, 0x0d, 0x87, 0x43, 0xbf, 0x07, 0xae, 0x54, 0xaf, 0x57, 0x2c, 0xa8, 0x0f, 0xea, 0x87, 0x3d,
	0xf4, 0x6f, 0x0d, 0x5a, 0x64, 0x8f, 0xf9, 0x01, 0x78, 0x17, 0x22, 0xe6, 0x8a, 0x8b, 0x28, 0xf5,
	0xf0, 0xef, 0x83, 0xa3, 0x19, 0x04, 0x8d, 0x41, 0xfd, 0xb0, 0x33, 0xba, 0x77, 0x94, 0x51, 0x38,
	0xba, 0xd0, 0xff, 0x3c, 0x11, 0x62, 0xe9, 0x7f, 0x0c, 0x5e, 0x12, 0x33, 0xc9, 0xa3, 0x3f, 0x44,
	0xe0, 0x0c, 0x1a, 0x16, 0xb3, 0xa7, 0x31, 0x93, 0x39, 0x15, 0xd7, 0x00, 0x1f, 0x80, 0xcb, 0xa4,
	0x14, 0x32, 0x68, 0x9a, 0xf8, 0xb5, 0x21, 0x7a, 0x0e, 0x5d, 0xf2, 0x58, 0xcd, 0x99, 0xac, 0x24,
	0x78, 0x5c, 0x88, 0x55, 0xb7, 0x52, 0x32, 0xb1, 0x36, 0xe0, 0x8d, 0x0c, 0xfc, 0x77, 0x68, 0x91,
	0x5f, 0xe7, 0x09, 0x8d, 0x66, 0x16, 0xdc, 0x91, 0xdf, 0x87, 0xe6, 0x5f, 0xe6, 0x76, 0x9d, 0x76,
	0x17, 0x9c, 0x05, 0xa7, 0x91, 0x49, 0xbb, 0xe7, 0xdf, 0x85, 0xf6, 0x2b, 0xaa, 0xa6, 0xf3, 0x98,
	0x51, 0x15, 0x38, 0x45, 0xfa, 0x6e, 0x16, 0x61, 0x0c, 0xbd, 0xf5, 0x4b, 0xe8, 0xaa, 0xf0, 0xd0,
	0x12, 0x67, 0xac, 0xe3, 0x48, 0x73, 0xbb, 0x7e, 0x90, 0xfb, 0xd0, 0x21, 0xbf, 0x50, 0xae, 0xbe,
	0x91, 0xe2, 0x8a, 0xd9, 0x52, 0x3e, 0x43, 0x1f, 0x42, 0x0b, 0x57, 0x5e, 0x3f, 0x40, 0x9f, 0x41,
	0x8b, 0x54, 0x5f, 0xe7, 0x3c, 0xeb, 0x19, 0xcf, 0xdf, 0xa0, 0xb3, 0xae, 0xc4, 0x43, 0x46, 0x17,
	0xbb, 0x4e, 0xe3, 0x07, 0x3a, 0xfb, 0x90, 0x4f, 0xd7, 0xa2, 0xd1, 0x0f, 0x37, 0xa5, 0x32, 0x8c,
	0x4d, 0x31, 0xba, 0xfa, 0xf3, 0x9a, 0x2e, 0x12, 0x16, 0x38, 0xda, 0xc3, 0x52, 0x88, 0x67, 0xe0,
	0x12, 0x3b, 0xf4, 0x70, 0x72, 0x63, 0xe8, 0x52, 0x8d, 0xeb, 0x29, 0xf4, 0x4c, 0x43, 0x4b, 0xfa,
	0xca, 0x02, 0x7d, 0xa2, 0xa1, 0x35, 0x58, 0x9a, 0x69, 0x8e, 0x65, 0x24, 0xa0, 0x2f, 0xaf, 0x44,
	0x34, 0xab, 0x22, 0x9d, 0x33, 0x69, 0x6a, 0x26, 0xe8, 0x4b, 0xf0, 0xf0, 0x43, 0x1e, 0xeb, 0x23,
	0x4b, 0xac, 0xd3, 0x1c, 0x7d, 0x23, 0x17, 0x13, 0xda, 0xc8, 0x05, 0xfd, 0x04, 0x90, 0x0a, 0xd9,
	0x4e, 0xf5, 0xf8, 0x54, 0xdb, 0x1b, 0x2d, 0x6d, 0xbc, 0x0d, 0xb7, 0x46, 0x91, 0x9b, 0x93, 0x15,
	0x94, 0x83, 0x47, 0xf6, 0x91, 0xd9, 0x41, 0xcb, 0xb9, 0x94, 0x4b, 0xda, 0x05, 0x47, 0xf1, 0x68,
	0x56, 0xd9, 0x83, 0x3a, 0xef, 0xc7, 0x2b, 0x26, 0xa9, 0x62, 0x16, 0xe2, 0xa3, 0xad, 0x1a, 0xd7,
	0x8b, 0x35, 0xd6, 0x79, 0xff, 0x53, 0x03, 0x8f, 0xbc, 0xc1, 0x7b, 0x8b, 0x68, 0x1f, 0x9a, 0x2f,
	0x98, 0xf9, 0x6e, 0x14, 0x88, 0x67, 0x8f, 0xef, 0x85, 0x89, 0x7a, 0x6d, 0x4e, 0xdc, 0x62, 0xb4,
	0xa6, 0xf9, 0xbc, 0x07, 0x9d, 0x90, 0xc7, 0x53, 0x11, 0x29, 0x1e, 0x25, 0x2c, 0x68, 0x15, 0x33,
	0xf2, 0xb2, 0x8c, 0xce, 0xa1, 0x4d, 0x2e, 0x58, 0x34, 0xfb, 0x5e, 0xd8, 0x5a, 0xff, 0x78, 0x7c,
	0x8b, 0xea, 0xa1, 0xe7, 0xd0, 0x20, 0xdf, 0x26, 0x96, 0x96, 0x19, 0x96, 0x50, 0x7c, 0x00, 0x45,
	0xe5, 0x8c, 0x29, 0x52, 0x9d, 0x5e, 0xb9, 0x6d, 0xde, 0x85, 0x06, 0xb6, 0x83, 0xa3, 0x0f, 0xa0,
	0x89, 0x7f, 0x60, 0xf4, 0xda, 0x56, 0xd5, 0x09, 0xfa, 0x0a, 0x9a, 0xa4, 0xf2, 0xb6, 0x44, 0x6c,
	0x77, 0x30, 0x7e, 0x04, 0x6d, 0xfc, 0x84, 0x55, 0x8d, 0xdc, 0xd1, 0x04, 0xfd, 0x57, 0x87, 0x36,
	0xd9, 0x67, 0xa1, 0x9f, 0x6a, 0x55, 0xdc, 0x1a, 0x3e, 0x80, 0xe9, 0x26, 0x2c, 0x92, 0x68, 0x2b,
	0x7f, 0xd3, 0xf9, 0x4e, 0x36, 0x52, 0xb5, 0xe6, 0x53, 0x03, 0x37, 0x73, 0x9a, 0x33, 0x29, 0x5e,
	0x72, 0xc3, 0xb7, 0x99, 0x9d, 0x69, 0x15, 0xac, 0xcf, 0x5a, 0x85, 0x95, 0xe4, 0x55, 0xaf, 0xa4,
	0xbb, 0xd0, 0x9e, 0xd3, 0x28, 0x4c, 0x3b, 0xba, 0x6d, 0x66, 0xcb, 0xf6, 0xe6, 0x80, 0xea, 0x2d,
	0x85, 0xb2, 0x39, 0xd0, 0xb1, 0xda, 0x60, 0xdd, 0x83, 0xba, 0x89, 0x12, 0x19, 0x05, 0xdd, 0xa2,
	0x46, 0x7a, 0x85, 0x0e, 0xeb, 0x9b, 0xaf, 0x3b, 0xd0, 0x5a, 0xea, 0xcd, 0xc1, 0xc3, 0xe0, 0x4e,
	0xf1, 0x01, 0x0e, 0xb2, 0x07, 0xf8, 0xbb, 0x06, 0x6d, 0xf2, 0x88, 0x2e, 0x99, 0xb8, 0x66, 0xd2,
	0x52, 0xdf, 0x33, 0xdd, 0x28, 0xf3, 0xe4, 0x72, 0xb3, 0xc5, 0x35, 0xe8, 0x8a, 0x8a, 0x2d, 0x69,
	0x21, 0x70, 0x42, 0xaa, 0xe8, 0x7a, 0xfb, 0xbe, 0x53, 0xe6, 0xac, 0x6b, 0xac, 0x41, 0x5e, 0x72,
	0x9c, 0x77, 0x93, 0x0f, 0x40, 0x17, 0x8b, 0x1f, 0x29, 0xde, 0x9a, 0x7a, 0x9f, 0x40, 0x83, 0x9c,
	0x7f, 0xb7, 0xcb, 0x61, 0x52, 0xd2, 0x37, 0xfa, 0x1c, 0x7c, 0xbd, 0x93, 0x68, 0x38, 0xa5, 0xb1,
	0xc2, 0x73, 0xaa, 0x2e, 0xd9, 0x9f, 0xca, 0xe2, 0x37, 0xd6, 0x5c, 0x75, 0x8b, 0xb2, 0x28, 0x75,
	0xed, 0xa2, 0x13, 0xe8, 0x17, 0x5d, 0x2d, 0x6e, 0x93, 0x5d, 0xb7, 0x67, 0xe0, 0x93, 0x9b, 0x45,
	0x2c, 0x0a, 0x7e, 0x0b, 0x28, 0xdd, 0x31, 0xbb, 0xe3, 0xf5, 0x29, 0xf4, 0xc9, 0x9b, 0x19, 0xdd,
	0x1a, 0xf6, 0x7d, 0x70, 0xf1, 0x25, 0xb7, 0x0d, 0x9d, 0xc9, 0x29, 0x3a, 0x07, 0x97, 0x54, 0x5d,
	0x96, 0x42, 0x15, 0x87, 0xac, 0x25, 0xd0, 0x00, 0x00, 0xff, 0xcc, 0x69, 0xd5, 0x88, 0x9b, 0x9c,
	0xa1, 0x17, 0x00, 0x64, 0xaf, 0xc5, 0x5b, 0x18, 0x5f, 0x47, 0xd0, 0xc6, 0x8f, 0x98, 0x4a, 0xc5,
	0xb6, 0x13, 0xe2, 0xe4, 0xb8, 0xfc, 0x53, 0xf4, 0x6b, 0xad, 0xfa, 0x9b, 0xdb, 0x9b, 0x05, 0x9d,
	0x4f, 0x13, 0x34, 0x84, 0x2e, 0xbe, 0x94, 0x49, 0xac, 0x18, 0x8b, 0xe7, 0x7c, 0x65, 0x41, 0x30,
	0x4a, 0xb8, 0xe2, 0x51, 0xf6, 0x53, 0xeb, 0x02, 0xba, 0xe4, 0x56, 0x1e, 0x9b, 0xa2, 0x54, 0x14,
	0xfe, 0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0xb7, 0x69, 0x2f, 0x5c, 0x9c, 0x0b, 0x00, 0x00,
}
