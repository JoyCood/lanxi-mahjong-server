// Code generated by protoc-gen-go.
// source: coin.proto
// DO NOT EDIT!

package protocol

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// 更新玩家的金币等经济资源，当玩家的经济资源任何时候有变动，服务器主动推送
type SResource struct {
	Code             *uint32  `protobuf:"varint,1,opt,name=code,def=5000" json:"code,omitempty"`
	List             []*ResVo `protobuf:"bytes,2,rep,name=list" json:"list,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *SResource) Reset()                    { *m = SResource{} }
func (m *SResource) String() string            { return proto.CompactTextString(m) }
func (*SResource) ProtoMessage()               {}
func (*SResource) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

const Default_SResource_Code uint32 = 5000

func (m *SResource) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_SResource_Code
}

func (m *SResource) GetList() []*ResVo {
	if m != nil {
		return m.List
	}
	return nil
}

type ResVo struct {
	Id               *uint32 `protobuf:"varint,2,req,name=id" json:"id,omitempty"`
	Count            *int32  `protobuf:"varint,3,req,name=count" json:"count,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ResVo) Reset()                    { *m = ResVo{} }
func (m *ResVo) String() string            { return proto.CompactTextString(m) }
func (*ResVo) ProtoMessage()               {}
func (*ResVo) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

func (m *ResVo) GetId() uint32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *ResVo) GetCount() int32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

// 获取虚拟货币
type CGetCurrency struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=5001" json:"code,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CGetCurrency) Reset()                    { *m = CGetCurrency{} }
func (m *CGetCurrency) String() string            { return proto.CompactTextString(m) }
func (*CGetCurrency) ProtoMessage()               {}
func (*CGetCurrency) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{2} }

const Default_CGetCurrency_Code uint32 = 5001

func (m *CGetCurrency) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_CGetCurrency_Code
}

type SGetCurrency struct {
	Code             *uint32 `protobuf:"varint,1,opt,name=code,def=5001" json:"code,omitempty"`
	Coin             *uint32 `protobuf:"varint,2,req,name=coin" json:"coin,omitempty"`
	Diamond          *uint32 `protobuf:"varint,3,req,name=diamond" json:"diamond,omitempty"`
	Exchange         *uint32 `protobuf:"varint,4,req,name=exchange" json:"exchange,omitempty"`
	Ticket           *uint32 `protobuf:"varint,5,req,name=ticket" json:"ticket,omitempty"`
	Roomcard         *uint32 `protobuf:"varint,6,req,name=roomcard" json:"roomcard,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SGetCurrency) Reset()                    { *m = SGetCurrency{} }
func (m *SGetCurrency) String() string            { return proto.CompactTextString(m) }
func (*SGetCurrency) ProtoMessage()               {}
func (*SGetCurrency) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{3} }

const Default_SGetCurrency_Code uint32 = 5001

func (m *SGetCurrency) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return Default_SGetCurrency_Code
}

func (m *SGetCurrency) GetCoin() uint32 {
	if m != nil && m.Coin != nil {
		return *m.Coin
	}
	return 0
}

func (m *SGetCurrency) GetDiamond() uint32 {
	if m != nil && m.Diamond != nil {
		return *m.Diamond
	}
	return 0
}

func (m *SGetCurrency) GetExchange() uint32 {
	if m != nil && m.Exchange != nil {
		return *m.Exchange
	}
	return 0
}

func (m *SGetCurrency) GetTicket() uint32 {
	if m != nil && m.Ticket != nil {
		return *m.Ticket
	}
	return 0
}

func (m *SGetCurrency) GetRoomcard() uint32 {
	if m != nil && m.Roomcard != nil {
		return *m.Roomcard
	}
	return 0
}

func init() {
	proto.RegisterType((*SResource)(nil), "protocol.SResource")
	proto.RegisterType((*ResVo)(nil), "protocol.ResVo")
	proto.RegisterType((*CGetCurrency)(nil), "protocol.CGetCurrency")
	proto.RegisterType((*SGetCurrency)(nil), "protocol.SGetCurrency")
}

var fileDescriptor2 = []byte{
	// 212 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x84, 0x8d, 0xb1, 0x4b, 0x03, 0x31,
	0x14, 0x87, 0x69, 0x7a, 0x57, 0xeb, 0xf3, 0xce, 0xca, 0x9b, 0xb2, 0x08, 0x21, 0x53, 0xa6, 0xe3,
	0x14, 0x5c, 0x1c, 0x5c, 0x3a, 0xb8, 0xb7, 0xe0, 0x7e, 0xbc, 0x3c, 0x34, 0xd8, 0xe6, 0x49, 0x2e,
	0x01, 0xfd, 0xef, 0xa5, 0xc1, 0x6e, 0x42, 0xa7, 0xf7, 0xf8, 0xf8, 0x7e, 0x7c, 0x00, 0x24, 0x21,
	0x0e, 0x5f, 0x49, 0xb2, 0xe0, 0xba, 0x1e, 0x92, 0x83, 0x7d, 0x81, 0xeb, 0xfd, 0x8e, 0x67, 0x29,
	0x89, 0x18, 0x11, 0x1a, 0x12, 0xcf, 0x7a, 0x61, 0x16, 0xae, 0x7f, 0x6e, 0x9e, 0xc6, 0x71, 0xc4,
	0x7b, 0x68, 0x0e, 0x61, 0xce, 0x5a, 0x99, 0xa5, 0xbb, 0x79, 0xdc, 0x0c, 0xe7, 0xe5, 0xb0, 0xe3,
	0xf9, 0x4d, 0xac, 0x85, 0xb6, 0x3e, 0x08, 0xa0, 0x82, 0xd7, 0xca, 0x28, 0xd7, 0x63, 0x0f, 0x2d,
	0x49, 0x89, 0x59, 0x2f, 0x8d, 0x72, 0xad, 0xb5, 0xd0, 0x6d, 0x5f, 0x39, 0x6f, 0x4b, 0x4a, 0x1c,
	0xe9, 0xe7, 0x9f, 0xcc, 0x83, 0x2d, 0xd0, 0xed, 0x2f, 0x38, 0xd8, 0x9d, 0x58, 0x88, 0x7f, 0x91,
	0x0d, 0x5c, 0xf9, 0x30, 0x1d, 0x25, 0xfa, 0x9a, 0xe9, 0xf1, 0x0e, 0xd6, 0xfc, 0x4d, 0x1f, 0x53,
	0x7c, 0x67, 0xdd, 0x54, 0x72, 0x0b, 0xab, 0x1c, 0xe8, 0x93, 0xb3, 0x6e, 0xcf, 0x46, 0x12, 0x39,
	0xd2, 0x94, 0xbc, 0x5e, 0x9d, 0xc8, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xda, 0x4f, 0xb2, 0xc4,
	0x15, 0x01, 0x00, 0x00,
}
