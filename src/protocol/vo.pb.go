// Code generated by protoc-gen-go.
// source: vo.proto
// DO NOT EDIT!

package protocol

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// 玩家的详细数据
type UserData struct {
	Userid           *string `protobuf:"bytes,1,req,name=userid" json:"userid,omitempty"`
	Nickname         *string `protobuf:"bytes,2,req,name=nickname" json:"nickname,omitempty"`
	Email            *string `protobuf:"bytes,3,req,name=email" json:"email,omitempty"`
	Phone            *string `protobuf:"bytes,4,req,name=phone" json:"phone,omitempty"`
	Sex              *uint32 `protobuf:"varint,5,req,name=sex" json:"sex,omitempty"`
	Status           *uint32 `protobuf:"varint,6,req,name=status" json:"status,omitempty"`
	Online           *bool   `protobuf:"varint,7,req,name=online" json:"online,omitempty"`
	Exp              *uint32 `protobuf:"varint,8,req,name=exp" json:"exp,omitempty"`
	Ip               *uint32 `protobuf:"varint,9,req,name=ip" json:"ip,omitempty"`
	Photo            *string `protobuf:"bytes,10,req,name=photo" json:"photo,omitempty"`
	Address          *string `protobuf:"bytes,11,req,name=address" json:"address,omitempty"`
	Createtime       *uint32 `protobuf:"varint,12,req,name=createtime" json:"createtime,omitempty"`
	Sign             *string `protobuf:"bytes,13,req,name=sign" json:"sign,omitempty"`
	Birth            *uint32 `protobuf:"varint,14,req,name=birth" json:"birth,omitempty"`
	Terminal         *string `protobuf:"bytes,15,req,name=terminal" json:"terminal,omitempty"`
	Coin             *uint32 `protobuf:"varint,16,req,name=coin" json:"coin,omitempty"`
	Roomtype         *uint32 `protobuf:"varint,18,req,name=roomtype" json:"roomtype,omitempty"`
	Roomid           *uint32 `protobuf:"varint,19,req,name=roomid" json:"roomid,omitempty"`
	Invitecode       *string `protobuf:"bytes,20,req,name=invitecode" json:"invitecode,omitempty"`
	Diamond          *uint32 `protobuf:"varint,21,req,name=diamond" json:"diamond,omitempty"`
	Exchange         *uint32 `protobuf:"varint,22,req,name=exchange" json:"exchange,omitempty"`
	Ticket           *uint32 `protobuf:"varint,23,req,name=ticket" json:"ticket,omitempty"`
	Vip              *uint32 `protobuf:"varint,24,req,name=vip" json:"vip,omitempty"`
	Win              *uint32 `protobuf:"varint,25,req,name=win" json:"win,omitempty"`
	Lost             *uint32 `protobuf:"varint,26,req,name=lost" json:"lost,omitempty"`
	Ping             *uint32 `protobuf:"varint,27,req,name=ping" json:"ping,omitempty"`
	Platform         *uint32 `protobuf:"varint,28,req,name=platform" json:"platform,omitempty"`
	Rupt             *uint32 `protobuf:"varint,29,req,name=rupt" json:"rupt,omitempty"`
	Sound            *bool   `protobuf:"varint,30,req,name=sound" json:"sound,omitempty"`
	Roomcard         *uint32 `protobuf:"varint,31,req,name=roomcard" json:"roomcard,omitempty"`
	Build            *string `protobuf:"bytes,32,req,name=build" json:"build,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *UserData) Reset()                    { *m = UserData{} }
func (m *UserData) String() string            { return proto.CompactTextString(m) }
func (*UserData) ProtoMessage()               {}
func (*UserData) Descriptor() ([]byte, []int) { return fileDescriptor14, []int{0} }

func (m *UserData) GetUserid() string {
	if m != nil && m.Userid != nil {
		return *m.Userid
	}
	return ""
}

func (m *UserData) GetNickname() string {
	if m != nil && m.Nickname != nil {
		return *m.Nickname
	}
	return ""
}

func (m *UserData) GetEmail() string {
	if m != nil && m.Email != nil {
		return *m.Email
	}
	return ""
}

func (m *UserData) GetPhone() string {
	if m != nil && m.Phone != nil {
		return *m.Phone
	}
	return ""
}

func (m *UserData) GetSex() uint32 {
	if m != nil && m.Sex != nil {
		return *m.Sex
	}
	return 0
}

func (m *UserData) GetStatus() uint32 {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return 0
}

func (m *UserData) GetOnline() bool {
	if m != nil && m.Online != nil {
		return *m.Online
	}
	return false
}

func (m *UserData) GetExp() uint32 {
	if m != nil && m.Exp != nil {
		return *m.Exp
	}
	return 0
}

func (m *UserData) GetIp() uint32 {
	if m != nil && m.Ip != nil {
		return *m.Ip
	}
	return 0
}

func (m *UserData) GetPhoto() string {
	if m != nil && m.Photo != nil {
		return *m.Photo
	}
	return ""
}

func (m *UserData) GetAddress() string {
	if m != nil && m.Address != nil {
		return *m.Address
	}
	return ""
}

func (m *UserData) GetCreatetime() uint32 {
	if m != nil && m.Createtime != nil {
		return *m.Createtime
	}
	return 0
}

func (m *UserData) GetSign() string {
	if m != nil && m.Sign != nil {
		return *m.Sign
	}
	return ""
}

func (m *UserData) GetBirth() uint32 {
	if m != nil && m.Birth != nil {
		return *m.Birth
	}
	return 0
}

func (m *UserData) GetTerminal() string {
	if m != nil && m.Terminal != nil {
		return *m.Terminal
	}
	return ""
}

func (m *UserData) GetCoin() uint32 {
	if m != nil && m.Coin != nil {
		return *m.Coin
	}
	return 0
}

func (m *UserData) GetRoomtype() uint32 {
	if m != nil && m.Roomtype != nil {
		return *m.Roomtype
	}
	return 0
}

func (m *UserData) GetRoomid() uint32 {
	if m != nil && m.Roomid != nil {
		return *m.Roomid
	}
	return 0
}

func (m *UserData) GetInvitecode() string {
	if m != nil && m.Invitecode != nil {
		return *m.Invitecode
	}
	return ""
}

func (m *UserData) GetDiamond() uint32 {
	if m != nil && m.Diamond != nil {
		return *m.Diamond
	}
	return 0
}

func (m *UserData) GetExchange() uint32 {
	if m != nil && m.Exchange != nil {
		return *m.Exchange
	}
	return 0
}

func (m *UserData) GetTicket() uint32 {
	if m != nil && m.Ticket != nil {
		return *m.Ticket
	}
	return 0
}

func (m *UserData) GetVip() uint32 {
	if m != nil && m.Vip != nil {
		return *m.Vip
	}
	return 0
}

func (m *UserData) GetWin() uint32 {
	if m != nil && m.Win != nil {
		return *m.Win
	}
	return 0
}

func (m *UserData) GetLost() uint32 {
	if m != nil && m.Lost != nil {
		return *m.Lost
	}
	return 0
}

func (m *UserData) GetPing() uint32 {
	if m != nil && m.Ping != nil {
		return *m.Ping
	}
	return 0
}

func (m *UserData) GetPlatform() uint32 {
	if m != nil && m.Platform != nil {
		return *m.Platform
	}
	return 0
}

func (m *UserData) GetRupt() uint32 {
	if m != nil && m.Rupt != nil {
		return *m.Rupt
	}
	return 0
}

func (m *UserData) GetSound() bool {
	if m != nil && m.Sound != nil {
		return *m.Sound
	}
	return false
}

func (m *UserData) GetRoomcard() uint32 {
	if m != nil && m.Roomcard != nil {
		return *m.Roomcard
	}
	return 0
}

func (m *UserData) GetBuild() string {
	if m != nil && m.Build != nil {
		return *m.Build
	}
	return ""
}

// 玩家的基础数据
type ProtoUser struct {
	Userid           *string `protobuf:"bytes,1,req,name=userid" json:"userid,omitempty"`
	Nickname         *string `protobuf:"bytes,2,req,name=nickname" json:"nickname,omitempty"`
	Email            *string `protobuf:"bytes,3,req,name=email" json:"email,omitempty"`
	Position         *uint32 `protobuf:"varint,4,req,name=position" json:"position,omitempty"`
	Sex              *uint32 `protobuf:"varint,5,req,name=sex" json:"sex,omitempty"`
	Exp              *uint32 `protobuf:"varint,6,req,name=exp" json:"exp,omitempty"`
	Photo            *string `protobuf:"bytes,7,req,name=photo" json:"photo,omitempty"`
	Address          *string `protobuf:"bytes,8,req,name=address" json:"address,omitempty"`
	Sign             *string `protobuf:"bytes,9,req,name=sign" json:"sign,omitempty"`
	Terminal         *string `protobuf:"bytes,10,req,name=terminal" json:"terminal,omitempty"`
	Coin             *uint32 `protobuf:"varint,11,req,name=coin" json:"coin,omitempty"`
	Diamond          *uint32 `protobuf:"varint,12,req,name=diamond" json:"diamond,omitempty"`
	Exchange         *uint32 `protobuf:"varint,13,req,name=exchange" json:"exchange,omitempty"`
	Ready            *bool   `protobuf:"varint,14,req,name=ready" json:"ready,omitempty"`
	Vip              *uint32 `protobuf:"varint,15,req,name=vip" json:"vip,omitempty"`
	Win              *uint32 `protobuf:"varint,16,req,name=win" json:"win,omitempty"`
	Lost             *uint32 `protobuf:"varint,17,req,name=lost" json:"lost,omitempty"`
	Ping             *uint32 `protobuf:"varint,18,req,name=ping" json:"ping,omitempty"`
	Ting             *uint32 `protobuf:"varint,19,req,name=ting" json:"ting,omitempty"`
	Platform         *uint32 `protobuf:"varint,20,req,name=platform" json:"platform,omitempty"`
	Score            *int32  `protobuf:"varint,21,req,name=score" json:"score,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ProtoUser) Reset()                    { *m = ProtoUser{} }
func (m *ProtoUser) String() string            { return proto.CompactTextString(m) }
func (*ProtoUser) ProtoMessage()               {}
func (*ProtoUser) Descriptor() ([]byte, []int) { return fileDescriptor14, []int{1} }

func (m *ProtoUser) GetUserid() string {
	if m != nil && m.Userid != nil {
		return *m.Userid
	}
	return ""
}

func (m *ProtoUser) GetNickname() string {
	if m != nil && m.Nickname != nil {
		return *m.Nickname
	}
	return ""
}

func (m *ProtoUser) GetEmail() string {
	if m != nil && m.Email != nil {
		return *m.Email
	}
	return ""
}

func (m *ProtoUser) GetPosition() uint32 {
	if m != nil && m.Position != nil {
		return *m.Position
	}
	return 0
}

func (m *ProtoUser) GetSex() uint32 {
	if m != nil && m.Sex != nil {
		return *m.Sex
	}
	return 0
}

func (m *ProtoUser) GetExp() uint32 {
	if m != nil && m.Exp != nil {
		return *m.Exp
	}
	return 0
}

func (m *ProtoUser) GetPhoto() string {
	if m != nil && m.Photo != nil {
		return *m.Photo
	}
	return ""
}

func (m *ProtoUser) GetAddress() string {
	if m != nil && m.Address != nil {
		return *m.Address
	}
	return ""
}

func (m *ProtoUser) GetSign() string {
	if m != nil && m.Sign != nil {
		return *m.Sign
	}
	return ""
}

func (m *ProtoUser) GetTerminal() string {
	if m != nil && m.Terminal != nil {
		return *m.Terminal
	}
	return ""
}

func (m *ProtoUser) GetCoin() uint32 {
	if m != nil && m.Coin != nil {
		return *m.Coin
	}
	return 0
}

func (m *ProtoUser) GetDiamond() uint32 {
	if m != nil && m.Diamond != nil {
		return *m.Diamond
	}
	return 0
}

func (m *ProtoUser) GetExchange() uint32 {
	if m != nil && m.Exchange != nil {
		return *m.Exchange
	}
	return 0
}

func (m *ProtoUser) GetReady() bool {
	if m != nil && m.Ready != nil {
		return *m.Ready
	}
	return false
}

func (m *ProtoUser) GetVip() uint32 {
	if m != nil && m.Vip != nil {
		return *m.Vip
	}
	return 0
}

func (m *ProtoUser) GetWin() uint32 {
	if m != nil && m.Win != nil {
		return *m.Win
	}
	return 0
}

func (m *ProtoUser) GetLost() uint32 {
	if m != nil && m.Lost != nil {
		return *m.Lost
	}
	return 0
}

func (m *ProtoUser) GetPing() uint32 {
	if m != nil && m.Ping != nil {
		return *m.Ping
	}
	return 0
}

func (m *ProtoUser) GetTing() uint32 {
	if m != nil && m.Ting != nil {
		return *m.Ting
	}
	return 0
}

func (m *ProtoUser) GetPlatform() uint32 {
	if m != nil && m.Platform != nil {
		return *m.Platform
	}
	return 0
}

func (m *ProtoUser) GetScore() int32 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

// 圈子数据
type CircleAttrube struct {
	Ctype            *uint32 `protobuf:"varint,1,req,name=ctype" json:"ctype,omitempty"`
	Maxcount         *uint32 `protobuf:"varint,2,req,name=maxcount" json:"maxcount,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CircleAttrube) Reset()                    { *m = CircleAttrube{} }
func (m *CircleAttrube) String() string            { return proto.CompactTextString(m) }
func (*CircleAttrube) ProtoMessage()               {}
func (*CircleAttrube) Descriptor() ([]byte, []int) { return fileDescriptor14, []int{2} }

func (m *CircleAttrube) GetCtype() uint32 {
	if m != nil && m.Ctype != nil {
		return *m.Ctype
	}
	return 0
}

func (m *CircleAttrube) GetMaxcount() uint32 {
	if m != nil && m.Maxcount != nil {
		return *m.Maxcount
	}
	return 0
}

// 比赛场次数据
type MatchAttrube struct {
	Kind             *uint32 `protobuf:"varint,1,req,name=kind" json:"kind,omitempty"`
	Level            *uint32 `protobuf:"varint,2,req,name=level" json:"level,omitempty"`
	Playercount      *uint32 `protobuf:"varint,3,req,name=playercount" json:"playercount,omitempty"`
	Consume          *uint32 `protobuf:"varint,4,req,name=consume" json:"consume,omitempty"`
	Cost             *uint32 `protobuf:"varint,5,req,name=cost" json:"cost,omitempty"`
	Plan             *uint32 `protobuf:"varint,6,req,name=plan" json:"plan,omitempty"`
	Starttime        *uint32 `protobuf:"varint,7,req,name=starttime" json:"starttime,omitempty"`
	Endtime          *uint32 `protobuf:"varint,8,req,name=endtime" json:"endtime,omitempty"`
	Weekystart       *uint32 `protobuf:"varint,9,req,name=weekystart" json:"weekystart,omitempty"`
	Weekyend         *uint32 `protobuf:"varint,10,req,name=weekyend" json:"weekyend,omitempty"`
	Dailystart       *uint32 `protobuf:"varint,11,req,name=dailystart" json:"dailystart,omitempty"`
	Dailyend         *uint32 `protobuf:"varint,12,req,name=dailyend" json:"dailyend,omitempty"`
	Rewards          *uint32 `protobuf:"varint,13,req,name=rewards" json:"rewards,omitempty"`
	Dieout           *uint32 `protobuf:"varint,14,req,name=dieout" json:"dieout,omitempty"`
	Gametimes        *uint32 `protobuf:"varint,15,req,name=gametimes" json:"gametimes,omitempty"`
	Matchtimes       *uint32 `protobuf:"varint,16,req,name=matchtimes" json:"matchtimes,omitempty"`
	Roomtype         *uint32 `protobuf:"varint,17,req,name=roomtype" json:"roomtype,omitempty"`
	Status           *uint32 `protobuf:"varint,18,req,name=status" json:"status,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MatchAttrube) Reset()                    { *m = MatchAttrube{} }
func (m *MatchAttrube) String() string            { return proto.CompactTextString(m) }
func (*MatchAttrube) ProtoMessage()               {}
func (*MatchAttrube) Descriptor() ([]byte, []int) { return fileDescriptor14, []int{3} }

func (m *MatchAttrube) GetKind() uint32 {
	if m != nil && m.Kind != nil {
		return *m.Kind
	}
	return 0
}

func (m *MatchAttrube) GetLevel() uint32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *MatchAttrube) GetPlayercount() uint32 {
	if m != nil && m.Playercount != nil {
		return *m.Playercount
	}
	return 0
}

func (m *MatchAttrube) GetConsume() uint32 {
	if m != nil && m.Consume != nil {
		return *m.Consume
	}
	return 0
}

func (m *MatchAttrube) GetCost() uint32 {
	if m != nil && m.Cost != nil {
		return *m.Cost
	}
	return 0
}

func (m *MatchAttrube) GetPlan() uint32 {
	if m != nil && m.Plan != nil {
		return *m.Plan
	}
	return 0
}

func (m *MatchAttrube) GetStarttime() uint32 {
	if m != nil && m.Starttime != nil {
		return *m.Starttime
	}
	return 0
}

func (m *MatchAttrube) GetEndtime() uint32 {
	if m != nil && m.Endtime != nil {
		return *m.Endtime
	}
	return 0
}

func (m *MatchAttrube) GetWeekystart() uint32 {
	if m != nil && m.Weekystart != nil {
		return *m.Weekystart
	}
	return 0
}

func (m *MatchAttrube) GetWeekyend() uint32 {
	if m != nil && m.Weekyend != nil {
		return *m.Weekyend
	}
	return 0
}

func (m *MatchAttrube) GetDailystart() uint32 {
	if m != nil && m.Dailystart != nil {
		return *m.Dailystart
	}
	return 0
}

func (m *MatchAttrube) GetDailyend() uint32 {
	if m != nil && m.Dailyend != nil {
		return *m.Dailyend
	}
	return 0
}

func (m *MatchAttrube) GetRewards() uint32 {
	if m != nil && m.Rewards != nil {
		return *m.Rewards
	}
	return 0
}

func (m *MatchAttrube) GetDieout() uint32 {
	if m != nil && m.Dieout != nil {
		return *m.Dieout
	}
	return 0
}

func (m *MatchAttrube) GetGametimes() uint32 {
	if m != nil && m.Gametimes != nil {
		return *m.Gametimes
	}
	return 0
}

func (m *MatchAttrube) GetMatchtimes() uint32 {
	if m != nil && m.Matchtimes != nil {
		return *m.Matchtimes
	}
	return 0
}

func (m *MatchAttrube) GetRoomtype() uint32 {
	if m != nil && m.Roomtype != nil {
		return *m.Roomtype
	}
	return 0
}

func (m *MatchAttrube) GetStatus() uint32 {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return 0
}

// 房间数据(后面要和ProtoRoom合并)
type RoomAttrube struct {
	Rtype            *uint32 `protobuf:"varint,1,req,name=rtype" json:"rtype,omitempty"`
	Ante             *uint32 `protobuf:"varint,2,req,name=ante" json:"ante,omitempty"`
	Maxcount         *uint32 `protobuf:"varint,3,req,name=maxcount" json:"maxcount,omitempty"`
	Percent          *uint32 `protobuf:"varint,4,req,name=percent" json:"percent,omitempty"`
	Access           *uint32 `protobuf:"varint,5,req,name=access" json:"access,omitempty"`
	Private          *uint32 `protobuf:"varint,6,req,name=private" json:"private,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *RoomAttrube) Reset()                    { *m = RoomAttrube{} }
func (m *RoomAttrube) String() string            { return proto.CompactTextString(m) }
func (*RoomAttrube) ProtoMessage()               {}
func (*RoomAttrube) Descriptor() ([]byte, []int) { return fileDescriptor14, []int{4} }

func (m *RoomAttrube) GetRtype() uint32 {
	if m != nil && m.Rtype != nil {
		return *m.Rtype
	}
	return 0
}

func (m *RoomAttrube) GetAnte() uint32 {
	if m != nil && m.Ante != nil {
		return *m.Ante
	}
	return 0
}

func (m *RoomAttrube) GetMaxcount() uint32 {
	if m != nil && m.Maxcount != nil {
		return *m.Maxcount
	}
	return 0
}

func (m *RoomAttrube) GetPercent() uint32 {
	if m != nil && m.Percent != nil {
		return *m.Percent
	}
	return 0
}

func (m *RoomAttrube) GetAccess() uint32 {
	if m != nil && m.Access != nil {
		return *m.Access
	}
	return 0
}

func (m *RoomAttrube) GetPrivate() uint32 {
	if m != nil && m.Private != nil {
		return *m.Private
	}
	return 0
}

type RoomData struct {
	Roomid           *uint32 `protobuf:"varint,1,req,name=roomid" json:"roomid,omitempty"`
	Rtype            *uint32 `protobuf:"varint,2,req,name=rtype" json:"rtype,omitempty"`
	Rname            *string `protobuf:"bytes,3,req,name=rname" json:"rname,omitempty"`
	Expire           *uint32 `protobuf:"varint,4,req,name=expire" json:"expire,omitempty"`
	Count            *uint32 `protobuf:"varint,5,req,name=count" json:"count,omitempty"`
	Cid              *uint32 `protobuf:"varint,6,req,name=cid" json:"cid,omitempty"`
	Invitecode       *string `protobuf:"bytes,7,req,name=invitecode" json:"invitecode,omitempty"`
	Audience         *uint32 `protobuf:"varint,8,req,name=audience" json:"audience,omitempty"`
	Pub              *uint32 `protobuf:"varint,9,req,name=pub" json:"pub,omitempty"`
	Updownji         *uint32 `protobuf:"varint,10,req,name=updownji" json:"updownji,omitempty"`
	Horse            *uint32 `protobuf:"varint,11,req,name=horse" json:"horse,omitempty"`
	Zhuang           *uint32 `protobuf:"varint,12,req,name=zhuang" json:"zhuang,omitempty"`
	Round            *uint32 `protobuf:"varint,13,req,name=round" json:"round,omitempty"`
	Userid           *string `protobuf:"bytes,14,req,name=userid" json:"userid,omitempty"`
	Ma               *uint32 `protobuf:"varint,15,req,name=ma" json:"ma,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *RoomData) Reset()                    { *m = RoomData{} }
func (m *RoomData) String() string            { return proto.CompactTextString(m) }
func (*RoomData) ProtoMessage()               {}
func (*RoomData) Descriptor() ([]byte, []int) { return fileDescriptor14, []int{5} }

func (m *RoomData) GetRoomid() uint32 {
	if m != nil && m.Roomid != nil {
		return *m.Roomid
	}
	return 0
}

func (m *RoomData) GetRtype() uint32 {
	if m != nil && m.Rtype != nil {
		return *m.Rtype
	}
	return 0
}

func (m *RoomData) GetRname() string {
	if m != nil && m.Rname != nil {
		return *m.Rname
	}
	return ""
}

func (m *RoomData) GetExpire() uint32 {
	if m != nil && m.Expire != nil {
		return *m.Expire
	}
	return 0
}

func (m *RoomData) GetCount() uint32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

func (m *RoomData) GetCid() uint32 {
	if m != nil && m.Cid != nil {
		return *m.Cid
	}
	return 0
}

func (m *RoomData) GetInvitecode() string {
	if m != nil && m.Invitecode != nil {
		return *m.Invitecode
	}
	return ""
}

func (m *RoomData) GetAudience() uint32 {
	if m != nil && m.Audience != nil {
		return *m.Audience
	}
	return 0
}

func (m *RoomData) GetPub() uint32 {
	if m != nil && m.Pub != nil {
		return *m.Pub
	}
	return 0
}

func (m *RoomData) GetUpdownji() uint32 {
	if m != nil && m.Updownji != nil {
		return *m.Updownji
	}
	return 0
}

func (m *RoomData) GetHorse() uint32 {
	if m != nil && m.Horse != nil {
		return *m.Horse
	}
	return 0
}

func (m *RoomData) GetZhuang() uint32 {
	if m != nil && m.Zhuang != nil {
		return *m.Zhuang
	}
	return 0
}

func (m *RoomData) GetRound() uint32 {
	if m != nil && m.Round != nil {
		return *m.Round
	}
	return 0
}

func (m *RoomData) GetUserid() string {
	if m != nil && m.Userid != nil {
		return *m.Userid
	}
	return ""
}

func (m *RoomData) GetMa() uint32 {
	if m != nil && m.Ma != nil {
		return *m.Ma
	}
	return 0
}

// 房间数据结构
type ProtoRoom struct {
	Ante             *uint32 `protobuf:"varint,1,req,name=ante" json:"ante,omitempty"`
	Roomid           *uint32 `protobuf:"varint,2,req,name=roomid" json:"roomid,omitempty"`
	Zhuang           *uint32 `protobuf:"varint,3,req,name=zhuang" json:"zhuang,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ProtoRoom) Reset()                    { *m = ProtoRoom{} }
func (m *ProtoRoom) String() string            { return proto.CompactTextString(m) }
func (*ProtoRoom) ProtoMessage()               {}
func (*ProtoRoom) Descriptor() ([]byte, []int) { return fileDescriptor14, []int{6} }

func (m *ProtoRoom) GetAnte() uint32 {
	if m != nil && m.Ante != nil {
		return *m.Ante
	}
	return 0
}

func (m *ProtoRoom) GetRoomid() uint32 {
	if m != nil && m.Roomid != nil {
		return *m.Roomid
	}
	return 0
}

func (m *ProtoRoom) GetZhuang() uint32 {
	if m != nil && m.Zhuang != nil {
		return *m.Zhuang
	}
	return 0
}

// 圈子数据
type CircleData struct {
	Cid              *uint32 `protobuf:"varint,1,req,name=cid" json:"cid,omitempty"`
	Cname            *string `protobuf:"bytes,2,req,name=cname" json:"cname,omitempty"`
	Ctype            *uint32 `protobuf:"varint,3,req,name=ctype" json:"ctype,omitempty"`
	Creatorid        *string `protobuf:"bytes,4,req,name=creatorid" json:"creatorid,omitempty"`
	Count            *uint32 `protobuf:"varint,5,req,name=count" json:"count,omitempty"`
	Createtime       *uint32 `protobuf:"varint,6,req,name=createtime" json:"createtime,omitempty"`
	Status           *uint32 `protobuf:"varint,7,req,name=status" json:"status,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CircleData) Reset()                    { *m = CircleData{} }
func (m *CircleData) String() string            { return proto.CompactTextString(m) }
func (*CircleData) ProtoMessage()               {}
func (*CircleData) Descriptor() ([]byte, []int) { return fileDescriptor14, []int{7} }

func (m *CircleData) GetCid() uint32 {
	if m != nil && m.Cid != nil {
		return *m.Cid
	}
	return 0
}

func (m *CircleData) GetCname() string {
	if m != nil && m.Cname != nil {
		return *m.Cname
	}
	return ""
}

func (m *CircleData) GetCtype() uint32 {
	if m != nil && m.Ctype != nil {
		return *m.Ctype
	}
	return 0
}

func (m *CircleData) GetCreatorid() string {
	if m != nil && m.Creatorid != nil {
		return *m.Creatorid
	}
	return ""
}

func (m *CircleData) GetCount() uint32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

func (m *CircleData) GetCreatetime() uint32 {
	if m != nil && m.Createtime != nil {
		return *m.Createtime
	}
	return 0
}

func (m *CircleData) GetStatus() uint32 {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return 0
}

// 金币排行
type RankCoin struct {
	Userid           *string `protobuf:"bytes,1,req,name=userid" json:"userid,omitempty"`
	Nickname         *string `protobuf:"bytes,2,req,name=nickname" json:"nickname,omitempty"`
	Coin             *uint32 `protobuf:"varint,3,req,name=coin" json:"coin,omitempty"`
	Rank             *uint32 `protobuf:"varint,4,req,name=rank" json:"rank,omitempty"`
	Sex              *uint32 `protobuf:"varint,5,req,name=sex" json:"sex,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *RankCoin) Reset()                    { *m = RankCoin{} }
func (m *RankCoin) String() string            { return proto.CompactTextString(m) }
func (*RankCoin) ProtoMessage()               {}
func (*RankCoin) Descriptor() ([]byte, []int) { return fileDescriptor14, []int{8} }

func (m *RankCoin) GetUserid() string {
	if m != nil && m.Userid != nil {
		return *m.Userid
	}
	return ""
}

func (m *RankCoin) GetNickname() string {
	if m != nil && m.Nickname != nil {
		return *m.Nickname
	}
	return ""
}

func (m *RankCoin) GetCoin() uint32 {
	if m != nil && m.Coin != nil {
		return *m.Coin
	}
	return 0
}

func (m *RankCoin) GetRank() uint32 {
	if m != nil && m.Rank != nil {
		return *m.Rank
	}
	return 0
}

func (m *RankCoin) GetSex() uint32 {
	if m != nil && m.Sex != nil {
		return *m.Sex
	}
	return 0
}

// 经验排行
type RankExp struct {
	Userid           *string `protobuf:"bytes,1,req,name=userid" json:"userid,omitempty"`
	Nickname         *string `protobuf:"bytes,2,req,name=nickname" json:"nickname,omitempty"`
	Exp              *uint32 `protobuf:"varint,3,req,name=exp" json:"exp,omitempty"`
	Rank             *uint32 `protobuf:"varint,4,req,name=rank" json:"rank,omitempty"`
	Sex              *uint32 `protobuf:"varint,5,req,name=sex" json:"sex,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *RankExp) Reset()                    { *m = RankExp{} }
func (m *RankExp) String() string            { return proto.CompactTextString(m) }
func (*RankExp) ProtoMessage()               {}
func (*RankExp) Descriptor() ([]byte, []int) { return fileDescriptor14, []int{9} }

func (m *RankExp) GetUserid() string {
	if m != nil && m.Userid != nil {
		return *m.Userid
	}
	return ""
}

func (m *RankExp) GetNickname() string {
	if m != nil && m.Nickname != nil {
		return *m.Nickname
	}
	return ""
}

func (m *RankExp) GetExp() uint32 {
	if m != nil && m.Exp != nil {
		return *m.Exp
	}
	return 0
}

func (m *RankExp) GetRank() uint32 {
	if m != nil && m.Rank != nil {
		return *m.Rank
	}
	return 0
}

func (m *RankExp) GetSex() uint32 {
	if m != nil && m.Sex != nil {
		return *m.Sex
	}
	return 0
}

// 胜率排行
type RankWin struct {
	Userid           *string `protobuf:"bytes,1,req,name=userid" json:"userid,omitempty"`
	Nickname         *string `protobuf:"bytes,2,req,name=nickname" json:"nickname,omitempty"`
	Win              *uint32 `protobuf:"varint,3,req,name=win" json:"win,omitempty"`
	Rank             *uint32 `protobuf:"varint,4,req,name=rank" json:"rank,omitempty"`
	Sex              *uint32 `protobuf:"varint,5,req,name=sex" json:"sex,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *RankWin) Reset()                    { *m = RankWin{} }
func (m *RankWin) String() string            { return proto.CompactTextString(m) }
func (*RankWin) ProtoMessage()               {}
func (*RankWin) Descriptor() ([]byte, []int) { return fileDescriptor14, []int{10} }

func (m *RankWin) GetUserid() string {
	if m != nil && m.Userid != nil {
		return *m.Userid
	}
	return ""
}

func (m *RankWin) GetNickname() string {
	if m != nil && m.Nickname != nil {
		return *m.Nickname
	}
	return ""
}

func (m *RankWin) GetWin() uint32 {
	if m != nil && m.Win != nil {
		return *m.Win
	}
	return 0
}

func (m *RankWin) GetRank() uint32 {
	if m != nil && m.Rank != nil {
		return *m.Rank
	}
	return 0
}

func (m *RankWin) GetSex() uint32 {
	if m != nil && m.Sex != nil {
		return *m.Sex
	}
	return 0
}

type PrivateRecordForCircle struct {
	Rid              *uint32 `protobuf:"varint,1,req,name=rid" json:"rid,omitempty"`
	Rname            *string `protobuf:"bytes,2,req,name=rname" json:"rname,omitempty"`
	Time             *uint32 `protobuf:"varint,3,req,name=time" json:"time,omitempty"`
	Rtype            *uint32 `protobuf:"varint,4,req,name=rtype" json:"rtype,omitempty"`
	Coin             *int32  `protobuf:"varint,5,req,name=coin" json:"coin,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *PrivateRecordForCircle) Reset()                    { *m = PrivateRecordForCircle{} }
func (m *PrivateRecordForCircle) String() string            { return proto.CompactTextString(m) }
func (*PrivateRecordForCircle) ProtoMessage()               {}
func (*PrivateRecordForCircle) Descriptor() ([]byte, []int) { return fileDescriptor14, []int{11} }

func (m *PrivateRecordForCircle) GetRid() uint32 {
	if m != nil && m.Rid != nil {
		return *m.Rid
	}
	return 0
}

func (m *PrivateRecordForCircle) GetRname() string {
	if m != nil && m.Rname != nil {
		return *m.Rname
	}
	return ""
}

func (m *PrivateRecordForCircle) GetTime() uint32 {
	if m != nil && m.Time != nil {
		return *m.Time
	}
	return 0
}

func (m *PrivateRecordForCircle) GetRtype() uint32 {
	if m != nil && m.Rtype != nil {
		return *m.Rtype
	}
	return 0
}

func (m *PrivateRecordForCircle) GetCoin() int32 {
	if m != nil && m.Coin != nil {
		return *m.Coin
	}
	return 0
}

type PrivateRecordForRoom struct {
	Uname            *string `protobuf:"bytes,1,req,name=uname" json:"uname,omitempty"`
	Photo            *string `protobuf:"bytes,2,req,name=photo" json:"photo,omitempty"`
	Coin             *int32  `protobuf:"varint,3,req,name=coin" json:"coin,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *PrivateRecordForRoom) Reset()                    { *m = PrivateRecordForRoom{} }
func (m *PrivateRecordForRoom) String() string            { return proto.CompactTextString(m) }
func (*PrivateRecordForRoom) ProtoMessage()               {}
func (*PrivateRecordForRoom) Descriptor() ([]byte, []int) { return fileDescriptor14, []int{12} }

func (m *PrivateRecordForRoom) GetUname() string {
	if m != nil && m.Uname != nil {
		return *m.Uname
	}
	return ""
}

func (m *PrivateRecordForRoom) GetPhoto() string {
	if m != nil && m.Photo != nil {
		return *m.Photo
	}
	return ""
}

func (m *PrivateRecordForRoom) GetCoin() int32 {
	if m != nil && m.Coin != nil {
		return *m.Coin
	}
	return 0
}

// 明杠  MING_KONG uint32 = 2 << 1
// 暗杠	AN_KONG   uint32 = 2 << 2
// 补杠 	BU_KONG   uint32 = 2 << 3
type ProtoCard struct {
	Peng             []uint32 `protobuf:"varint,1,rep,name=peng" json:"peng,omitempty"`
	Kong             []uint32 `protobuf:"varint,2,rep,name=kong" json:"kong,omitempty"`
	Outcards         []byte   `protobuf:"bytes,3,req,name=outcards" json:"outcards,omitempty"`
	Seat             *uint32  `protobuf:"varint,4,req,name=seat" json:"seat,omitempty"`
	Chow             []uint32 `protobuf:"varint,5,rep,name=chow" json:"chow,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *ProtoCard) Reset()                    { *m = ProtoCard{} }
func (m *ProtoCard) String() string            { return proto.CompactTextString(m) }
func (*ProtoCard) ProtoMessage()               {}
func (*ProtoCard) Descriptor() ([]byte, []int) { return fileDescriptor14, []int{13} }

func (m *ProtoCard) GetPeng() []uint32 {
	if m != nil {
		return m.Peng
	}
	return nil
}

func (m *ProtoCard) GetKong() []uint32 {
	if m != nil {
		return m.Kong
	}
	return nil
}

func (m *ProtoCard) GetOutcards() []byte {
	if m != nil {
		return m.Outcards
	}
	return nil
}

func (m *ProtoCard) GetSeat() uint32 {
	if m != nil && m.Seat != nil {
		return *m.Seat
	}
	return 0
}

func (m *ProtoCard) GetChow() []uint32 {
	if m != nil {
		return m.Chow
	}
	return nil
}

// 结算数据
type ProtoCount struct {
	Seat             *uint32  `protobuf:"varint,1,req,name=seat" json:"seat,omitempty"`
	Cards            []byte   `protobuf:"bytes,2,req,name=cards" json:"cards,omitempty"`
	Hu               *uint32  `protobuf:"varint,3,req,name=hu" json:"hu,omitempty"`
	Ting             *uint32  `protobuf:"varint,4,req,name=ting" json:"ting,omitempty"`
	HuTypeFan        *int32   `protobuf:"varint,5,req,name=huTypeFan" json:"huTypeFan,omitempty"`
	HuFan            *int32   `protobuf:"varint,6,req,name=huFan" json:"huFan,omitempty"`
	MingKong         *int32   `protobuf:"varint,7,req,name=mingKong" json:"mingKong,omitempty"`
	BeMingKong       *int32   `protobuf:"varint,8,req,name=beMingKong" json:"beMingKong,omitempty"`
	AnKong           *int32   `protobuf:"varint,9,req,name=anKong" json:"anKong,omitempty"`
	BuKong           *int32   `protobuf:"varint,10,req,name=buKong" json:"buKong,omitempty"`
	HeroJi           *int32   `protobuf:"varint,11,req,name=heroJi" json:"heroJi,omitempty"`
	RelateJi         *int32   `protobuf:"varint,12,req,name=relateJi" json:"relateJi,omitempty"`
	NormalJi         *int32   `protobuf:"varint,13,req,name=normalJi" json:"normalJi,omitempty"`
	BaoJi            *int32   `protobuf:"varint,14,req,name=baoJi" json:"baoJi,omitempty"`
	DrawLots         *int32   `protobuf:"varint,15,req,name=drawLots" json:"drawLots,omitempty"`
	Jinji            *bool    `protobuf:"varint,16,req,name=jinji" json:"jinji,omitempty"`
	Lian             *int32   `protobuf:"varint,17,req,name=lian" json:"lian,omitempty"`
	Total            *int32   `protobuf:"varint,18,req,name=total" json:"total,omitempty"`
	Coin             *int32   `protobuf:"varint,19,req,name=coin" json:"coin,omitempty"`
	JiCards          []uint32 `protobuf:"varint,20,rep,name=jiCards" json:"jiCards,omitempty"`
	AllMaCards       []byte   `protobuf:"bytes,21,req,name=allMaCards" json:"allMaCards,omitempty"`
	MaCards          []byte   `protobuf:"bytes,22,req,name=maCards" json:"maCards,omitempty"`
	Ma               *int32   `protobuf:"varint,23,req,name=ma" json:"ma,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *ProtoCount) Reset()                    { *m = ProtoCount{} }
func (m *ProtoCount) String() string            { return proto.CompactTextString(m) }
func (*ProtoCount) ProtoMessage()               {}
func (*ProtoCount) Descriptor() ([]byte, []int) { return fileDescriptor14, []int{14} }

func (m *ProtoCount) GetSeat() uint32 {
	if m != nil && m.Seat != nil {
		return *m.Seat
	}
	return 0
}

func (m *ProtoCount) GetCards() []byte {
	if m != nil {
		return m.Cards
	}
	return nil
}

func (m *ProtoCount) GetHu() uint32 {
	if m != nil && m.Hu != nil {
		return *m.Hu
	}
	return 0
}

func (m *ProtoCount) GetTing() uint32 {
	if m != nil && m.Ting != nil {
		return *m.Ting
	}
	return 0
}

func (m *ProtoCount) GetHuTypeFan() int32 {
	if m != nil && m.HuTypeFan != nil {
		return *m.HuTypeFan
	}
	return 0
}

func (m *ProtoCount) GetHuFan() int32 {
	if m != nil && m.HuFan != nil {
		return *m.HuFan
	}
	return 0
}

func (m *ProtoCount) GetMingKong() int32 {
	if m != nil && m.MingKong != nil {
		return *m.MingKong
	}
	return 0
}

func (m *ProtoCount) GetBeMingKong() int32 {
	if m != nil && m.BeMingKong != nil {
		return *m.BeMingKong
	}
	return 0
}

func (m *ProtoCount) GetAnKong() int32 {
	if m != nil && m.AnKong != nil {
		return *m.AnKong
	}
	return 0
}

func (m *ProtoCount) GetBuKong() int32 {
	if m != nil && m.BuKong != nil {
		return *m.BuKong
	}
	return 0
}

func (m *ProtoCount) GetHeroJi() int32 {
	if m != nil && m.HeroJi != nil {
		return *m.HeroJi
	}
	return 0
}

func (m *ProtoCount) GetRelateJi() int32 {
	if m != nil && m.RelateJi != nil {
		return *m.RelateJi
	}
	return 0
}

func (m *ProtoCount) GetNormalJi() int32 {
	if m != nil && m.NormalJi != nil {
		return *m.NormalJi
	}
	return 0
}

func (m *ProtoCount) GetBaoJi() int32 {
	if m != nil && m.BaoJi != nil {
		return *m.BaoJi
	}
	return 0
}

func (m *ProtoCount) GetDrawLots() int32 {
	if m != nil && m.DrawLots != nil {
		return *m.DrawLots
	}
	return 0
}

func (m *ProtoCount) GetJinji() bool {
	if m != nil && m.Jinji != nil {
		return *m.Jinji
	}
	return false
}

func (m *ProtoCount) GetLian() int32 {
	if m != nil && m.Lian != nil {
		return *m.Lian
	}
	return 0
}

func (m *ProtoCount) GetTotal() int32 {
	if m != nil && m.Total != nil {
		return *m.Total
	}
	return 0
}

func (m *ProtoCount) GetCoin() int32 {
	if m != nil && m.Coin != nil {
		return *m.Coin
	}
	return 0
}

func (m *ProtoCount) GetJiCards() []uint32 {
	if m != nil {
		return m.JiCards
	}
	return nil
}

func (m *ProtoCount) GetAllMaCards() []byte {
	if m != nil {
		return m.AllMaCards
	}
	return nil
}

func (m *ProtoCount) GetMaCards() []byte {
	if m != nil {
		return m.MaCards
	}
	return nil
}

func (m *ProtoCount) GetMa() int32 {
	if m != nil && m.Ma != nil {
		return *m.Ma
	}
	return 0
}

// 邮箱数据
type PostBoxData struct {
	Title            *string `protobuf:"bytes,1,req,name=title" json:"title,omitempty"`
	Content          *string `protobuf:"bytes,2,req,name=content" json:"content,omitempty"`
	Appendixname     *string `protobuf:"bytes,3,req,name=appendixname" json:"appendixname,omitempty"`
	Expire           *uint32 `protobuf:"varint,4,req,name=expire" json:"expire,omitempty"`
	Sendername       *string `protobuf:"bytes,5,req,name=sendername" json:"sendername,omitempty"`
	Senderuserid     *string `protobuf:"bytes,6,req,name=senderuserid" json:"senderuserid,omitempty"`
	Read             *bool   `protobuf:"varint,7,req,name=read" json:"read,omitempty"`
	Draw             *bool   `protobuf:"varint,8,req,name=draw" json:"draw,omitempty"`
	Kind             *uint32 `protobuf:"varint,9,req,name=kind" json:"kind,omitempty"`
	Id               *uint32 `protobuf:"varint,10,req,name=id" json:"id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *PostBoxData) Reset()                    { *m = PostBoxData{} }
func (m *PostBoxData) String() string            { return proto.CompactTextString(m) }
func (*PostBoxData) ProtoMessage()               {}
func (*PostBoxData) Descriptor() ([]byte, []int) { return fileDescriptor14, []int{15} }

func (m *PostBoxData) GetTitle() string {
	if m != nil && m.Title != nil {
		return *m.Title
	}
	return ""
}

func (m *PostBoxData) GetContent() string {
	if m != nil && m.Content != nil {
		return *m.Content
	}
	return ""
}

func (m *PostBoxData) GetAppendixname() string {
	if m != nil && m.Appendixname != nil {
		return *m.Appendixname
	}
	return ""
}

func (m *PostBoxData) GetExpire() uint32 {
	if m != nil && m.Expire != nil {
		return *m.Expire
	}
	return 0
}

func (m *PostBoxData) GetSendername() string {
	if m != nil && m.Sendername != nil {
		return *m.Sendername
	}
	return ""
}

func (m *PostBoxData) GetSenderuserid() string {
	if m != nil && m.Senderuserid != nil {
		return *m.Senderuserid
	}
	return ""
}

func (m *PostBoxData) GetRead() bool {
	if m != nil && m.Read != nil {
		return *m.Read
	}
	return false
}

func (m *PostBoxData) GetDraw() bool {
	if m != nil && m.Draw != nil {
		return *m.Draw
	}
	return false
}

func (m *PostBoxData) GetKind() uint32 {
	if m != nil && m.Kind != nil {
		return *m.Kind
	}
	return 0
}

func (m *PostBoxData) GetId() uint32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

// 邮箱附件数据
type PostAppendixData struct {
	Postid           *uint32       `protobuf:"varint,1,req,name=postid" json:"postid,omitempty"`
	Name             *string       `protobuf:"bytes,2,req,name=name" json:"name,omitempty"`
	Widgets          []*WidgetData `protobuf:"bytes,3,rep,name=widgets" json:"widgets,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *PostAppendixData) Reset()                    { *m = PostAppendixData{} }
func (m *PostAppendixData) String() string            { return proto.CompactTextString(m) }
func (*PostAppendixData) ProtoMessage()               {}
func (*PostAppendixData) Descriptor() ([]byte, []int) { return fileDescriptor14, []int{16} }

func (m *PostAppendixData) GetPostid() uint32 {
	if m != nil && m.Postid != nil {
		return *m.Postid
	}
	return 0
}

func (m *PostAppendixData) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *PostAppendixData) GetWidgets() []*WidgetData {
	if m != nil {
		return m.Widgets
	}
	return nil
}

// 道具数据
type WidgetData struct {
	Id               *uint32 `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Count            *uint32 `protobuf:"varint,2,req,name=count" json:"count,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *WidgetData) Reset()                    { *m = WidgetData{} }
func (m *WidgetData) String() string            { return proto.CompactTextString(m) }
func (*WidgetData) ProtoMessage()               {}
func (*WidgetData) Descriptor() ([]byte, []int) { return fileDescriptor14, []int{17} }

func (m *WidgetData) GetId() uint32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *WidgetData) GetCount() uint32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

func init() {
	proto.RegisterType((*UserData)(nil), "protocol.UserData")
	proto.RegisterType((*ProtoUser)(nil), "protocol.ProtoUser")
	proto.RegisterType((*CircleAttrube)(nil), "protocol.CircleAttrube")
	proto.RegisterType((*MatchAttrube)(nil), "protocol.MatchAttrube")
	proto.RegisterType((*RoomAttrube)(nil), "protocol.RoomAttrube")
	proto.RegisterType((*RoomData)(nil), "protocol.RoomData")
	proto.RegisterType((*ProtoRoom)(nil), "protocol.ProtoRoom")
	proto.RegisterType((*CircleData)(nil), "protocol.CircleData")
	proto.RegisterType((*RankCoin)(nil), "protocol.RankCoin")
	proto.RegisterType((*RankExp)(nil), "protocol.RankExp")
	proto.RegisterType((*RankWin)(nil), "protocol.RankWin")
	proto.RegisterType((*PrivateRecordForCircle)(nil), "protocol.PrivateRecordForCircle")
	proto.RegisterType((*PrivateRecordForRoom)(nil), "protocol.PrivateRecordForRoom")
	proto.RegisterType((*ProtoCard)(nil), "protocol.ProtoCard")
	proto.RegisterType((*ProtoCount)(nil), "protocol.ProtoCount")
	proto.RegisterType((*PostBoxData)(nil), "protocol.PostBoxData")
	proto.RegisterType((*PostAppendixData)(nil), "protocol.PostAppendixData")
	proto.RegisterType((*WidgetData)(nil), "protocol.WidgetData")
}

var fileDescriptor14 = []byte{
	// 1259 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x94, 0x56, 0x4d, 0x8f, 0xdb, 0x36,
	0x13, 0x86, 0x65, 0xcb, 0x96, 0xc7, 0x1f, 0xeb, 0xd5, 0x6e, 0xf2, 0xf2, 0xed, 0xe7, 0x42, 0x40,
	0xd1, 0x3d, 0x05, 0x45, 0x6f, 0x3d, 0x26, 0xdb, 0xe6, 0x90, 0x36, 0x40, 0x90, 0x36, 0xc8, 0xb1,
	0xa0, 0xc5, 0xa9, 0xcd, 0x58, 0x22, 0x05, 0x8a, 0x5a, 0x7b, 0x0b, 0xf4, 0x57, 0xf5, 0x47, 0xf4,
	0xd4, 0xff, 0x52, 0xa0, 0xd7, 0x1e, 0x0a, 0x8e, 0x48, 0xad, 0xb5, 0x1b, 0xb4, 0xdb, 0x93, 0x3d,
	0xc3, 0xe1, 0x70, 0xf4, 0x3c, 0x33, 0x0f, 0x09, 0xc9, 0xb5, 0x7e, 0x52, 0x19, 0x6d, 0x75, 0x9a,
	0xd0, 0x4f, 0xae, 0x8b, 0xec, 0x8f, 0x21, 0x24, 0x6f, 0x6a, 0x34, 0x5f, 0x73, 0xcb, 0xd3, 0x25,
	0x8c, 0x9b, 0x1a, 0x8d, 0x14, 0x6c, 0x70, 0x11, 0x5d, 0x4e, 0xd3, 0x15, 0x24, 0x4a, 0xe6, 0x3b,
	0xc5, 0x4b, 0x64, 0x11, 0x79, 0x16, 0x10, 0x63, 0xc9, 0x65, 0xc1, 0x86, 0xc1, 0xac, 0xb6, 0x5a,
	0x21, 0x1b, 0x91, 0x39, 0x83, 0x61, 0x8d, 0x07, 0x16, 0x5f, 0x44, 0x97, 0x0b, 0x97, 0xac, 0xb6,
	0xdc, 0x36, 0x35, 0x1b, 0x07, 0x5b, 0xab, 0x42, 0x2a, 0x64, 0x93, 0x8b, 0xe8, 0x32, 0x71, 0xc1,
	0x78, 0xa8, 0x58, 0x42, 0x8b, 0x00, 0x91, 0xac, 0xd8, 0x94, 0xfe, 0xb7, 0x49, 0xad, 0x66, 0x40,
	0x49, 0x4f, 0x60, 0xc2, 0x85, 0x30, 0x58, 0xd7, 0x6c, 0x46, 0x8e, 0x14, 0x20, 0x37, 0xc8, 0x2d,
	0x5a, 0x59, 0x22, 0x9b, 0xd3, 0x9e, 0x39, 0x8c, 0x6a, 0xb9, 0x51, 0x6c, 0x11, 0xca, 0x5a, 0x4b,
	0x63, 0xb7, 0x6c, 0x49, 0x8b, 0x2b, 0x48, 0x2c, 0x9a, 0x52, 0x2a, 0x5e, 0xb0, 0x13, 0x0a, 0x98,
	0xc3, 0x28, 0xd7, 0x52, 0xb1, 0x55, 0x58, 0x37, 0x5a, 0x97, 0xf6, 0xa6, 0x42, 0x96, 0x86, 0x5a,
	0x9d, 0x47, 0x0a, 0x76, 0x46, 0x76, 0x0a, 0x20, 0xd5, 0xb5, 0xb4, 0x98, 0x6b, 0x81, 0xec, 0x3c,
	0xd4, 0x25, 0x24, 0x2f, 0xb5, 0x12, 0xec, 0x51, 0x48, 0x83, 0x87, 0x7c, 0xcb, 0xd5, 0x06, 0xd9,
	0xe3, 0x90, 0xc6, 0xca, 0x7c, 0x87, 0x96, 0xfd, 0x8f, 0xec, 0x19, 0x0c, 0xaf, 0x65, 0xc5, 0x58,
	0x30, 0xf6, 0x52, 0xb1, 0xff, 0x87, 0xfa, 0x0b, 0x5d, 0x5b, 0xf6, 0x41, 0xb0, 0x2a, 0xa9, 0x36,
	0xec, 0xc3, 0x90, 0xb7, 0x2a, 0xb8, 0xfd, 0x49, 0x9b, 0x92, 0x7d, 0x14, 0xd6, 0x4d, 0x53, 0x59,
	0xf6, 0x71, 0xc0, 0xab, 0xd6, 0x8d, 0x12, 0xec, 0x13, 0xc2, 0xd5, 0x7f, 0x4d, 0xce, 0x8d, 0x60,
	0x9f, 0x86, 0x80, 0x75, 0x23, 0x0b, 0xc1, 0x2e, 0x5c, 0xe1, 0xd9, 0xef, 0x11, 0x4c, 0x5f, 0x39,
	0xfe, 0x1d, 0xef, 0xff, 0x9d, 0x73, 0x57, 0x8e, 0xae, 0xa5, 0x95, 0x5a, 0x11, 0xed, 0x8b, 0x3e,
	0xed, 0x9e, 0xd6, 0x71, 0x9f, 0xca, 0xc9, 0x5d, 0x2a, 0x93, 0xc0, 0x03, 0xd1, 0x36, 0x0d, 0x99,
	0x3b, 0x9e, 0xa0, 0xc7, 0xd3, 0x8c, 0xb2, 0x1d, 0x21, 0x3e, 0xbf, 0x87, 0xf8, 0x22, 0x1c, 0x68,
	0x90, 0x8b, 0x1b, 0x62, 0x3e, 0x09, 0x80, 0x9f, 0x1c, 0x03, 0xbe, 0xea, 0x01, 0x7e, 0xda, 0x03,
	0x3c, 0x0d, 0x96, 0x75, 0xd6, 0xd9, 0x3d, 0xf8, 0xcf, 0x3b, 0xc0, 0x73, 0x6d, 0x90, 0x78, 0x8f,
	0xb3, 0x2f, 0x60, 0x71, 0x25, 0x4d, 0x5e, 0xe0, 0x53, 0x6b, 0x4d, 0xb3, 0x46, 0xb7, 0x9e, 0x53,
	0x33, 0x0d, 0x42, 0x82, 0x92, 0x1f, 0x72, 0xdd, 0x28, 0x4b, 0x88, 0x2e, 0xb2, 0xdf, 0x22, 0x98,
	0xbf, 0xe4, 0x36, 0xdf, 0x86, 0x1d, 0x73, 0x18, 0xed, 0xa4, 0x12, 0x7e, 0xc3, 0x02, 0xe2, 0x02,
	0xaf, 0xb1, 0x68, 0xa3, 0xd3, 0x33, 0x98, 0x55, 0x05, 0xbf, 0x41, 0xd3, 0xa6, 0x18, 0x06, 0x2c,
	0x72, 0xad, 0xea, 0xa6, 0x44, 0x4f, 0x02, 0x41, 0x55, 0x5b, 0xcf, 0x82, 0xfb, 0xa0, 0x82, 0x2b,
	0x4f, 0xc3, 0x29, 0x4c, 0x6b, 0xcb, 0x8d, 0xa5, 0x81, 0x99, 0x84, 0xfd, 0xa8, 0x04, 0x39, 0x92,
	0xd0, 0xe2, 0x7b, 0xc4, 0xdd, 0x0d, 0x05, 0xfa, 0x49, 0x5c, 0x41, 0x42, 0x3e, 0x54, 0x82, 0x08,
	0xa1, 0x28, 0xc1, 0x65, 0xe1, 0xa3, 0x66, 0x21, 0x8a, 0x7c, 0xd8, 0xf1, 0x72, 0x02, 0x13, 0x83,
	0x7b, 0x6e, 0x44, 0xed, 0x69, 0x59, 0xc2, 0x58, 0x48, 0xd4, 0x8d, 0xf5, 0x13, 0x79, 0x0a, 0xd3,
	0x0d, 0x2f, 0x69, 0x80, 0x6b, 0xcf, 0x4e, 0x0a, 0x50, 0x3a, 0x48, 0x5a, 0xdf, 0xfd, 0xc1, 0x3c,
	0xbd, 0x23, 0x2a, 0x44, 0x55, 0xa6, 0x60, 0xf6, 0x5a, 0xeb, 0xf2, 0x08, 0x79, 0x73, 0x84, 0xfc,
	0x1c, 0x46, 0x5c, 0x59, 0xf4, 0x38, 0x1e, 0xf3, 0xd0, 0x81, 0x58, 0xa1, 0xc9, 0x51, 0x59, 0x0f,
	0xe2, 0x12, 0xc6, 0x3c, 0xcf, 0x5d, 0x7f, 0xc6, 0x5d, 0x80, 0x91, 0xd7, 0xdc, 0x62, 0x8b, 0x64,
	0xf6, 0xe7, 0x00, 0x12, 0x77, 0x60, 0x90, 0x4b, 0xaf, 0x12, 0x1d, 0x6f, 0xed, 0xe9, 0x51, 0x67,
	0xd2, 0x18, 0xb5, 0x73, 0xb3, 0x84, 0x31, 0x1e, 0x2a, 0x69, 0x02, 0x61, 0xae, 0x4b, 0xa8, 0x96,
	0x6e, 0x6e, 0x72, 0x29, 0x3c, 0x61, 0x7d, 0xbd, 0x99, 0x84, 0xe9, 0xe0, 0x8d, 0x90, 0xa8, 0xf2,
	0x40, 0xd9, 0x0c, 0x86, 0x55, 0xb3, 0xbe, 0xe5, 0xaa, 0xa9, 0x84, 0xde, 0xab, 0x77, 0xd2, 0x73,
	0xb5, 0x80, 0x78, 0xab, 0x4d, 0x8d, 0x9e, 0xa6, 0x25, 0x8c, 0x7f, 0xde, 0x36, 0x5c, 0x6d, 0x3c,
	0x49, 0xae, 0x3c, 0x92, 0x8d, 0x8e, 0x22, 0xaf, 0x03, 0x4b, 0x3a, 0x0e, 0x20, 0x2a, 0x79, 0xcb,
	0x4d, 0xf6, 0x95, 0x17, 0x0c, 0xf7, 0xe5, 0x1d, 0xa8, 0x83, 0x3b, 0x4a, 0x19, 0xdd, 0x39, 0x85,
	0x20, 0xce, 0x7e, 0x01, 0x68, 0x87, 0x83, 0x10, 0xf3, 0x1f, 0xd9, 0xc1, 0x95, 0xf7, 0x65, 0xa6,
	0x9d, 0x9a, 0x61, 0x68, 0x11, 0x52, 0x79, 0xed, 0x4a, 0x1a, 0x75, 0x11, 0x47, 0x88, 0xf5, 0xef,
	0x81, 0xf1, 0x9d, 0xfe, 0xa0, 0x36, 0xcf, 0xde, 0x40, 0xf2, 0x9a, 0xab, 0xdd, 0x95, 0x96, 0xea,
	0x01, 0x4a, 0x17, 0xe4, 0x66, 0xd8, 0xa9, 0x2c, 0x57, 0xbb, 0xf7, 0x88, 0x5c, 0xf6, 0x3d, 0x4c,
	0x5c, 0xda, 0x6f, 0x0e, 0xd5, 0x03, 0xb2, 0x7a, 0x45, 0x7c, 0x68, 0xd2, 0xb7, 0x0f, 0x2a, 0xd5,
	0x8b, 0xd9, 0xbf, 0x26, 0xfd, 0x11, 0x1e, 0xbf, 0x6a, 0x3b, 0xf8, 0x35, 0xe6, 0xda, 0x88, 0xe7,
	0xda, 0xb4, 0x7c, 0xb8, 0x30, 0xd3, 0x6b, 0xdd, 0x3e, 0x10, 0x04, 0xea, 0xb0, 0xdf, 0xd7, 0x47,
	0x4a, 0x23, 0x15, 0x1d, 0x10, 0x67, 0xcf, 0xe0, 0xfc, 0xee, 0x01, 0xd4, 0x26, 0x0b, 0x88, 0x1b,
	0xca, 0x38, 0x38, 0x7a, 0x29, 0x58, 0xfd, 0x1e, 0xa4, 0xe3, 0xec, 0x8d, 0xef, 0xaf, 0x2b, 0x6e,
	0x04, 0x49, 0x17, 0xaa, 0x0d, 0x1b, 0x5c, 0x0c, 0xdb, 0xc3, 0x76, 0x5a, 0x6d, 0x58, 0x44, 0xd6,
	0x0a, 0x12, 0xdd, 0xd8, 0x9c, 0x94, 0xc5, 0x6d, 0x9d, 0xd3, 0x0d, 0x82, 0xdc, 0x1e, 0x95, 0xb6,
	0xd5, 0x7b, 0x16, 0xbb, 0xe8, 0xec, 0xaf, 0x08, 0xa0, 0xcd, 0xeb, 0xba, 0xa6, 0x0b, 0xbd, 0xed,
	0x3e, 0xca, 0x13, 0x51, 0x1e, 0x80, 0x68, 0xdb, 0xdc, 0xc2, 0x49, 0xfa, 0x3f, 0x0a, 0x8d, 0xb8,
	0x6d, 0x7e, 0xb8, 0xa9, 0xf0, 0x39, 0xf7, 0xdf, 0x4c, 0x93, 0xd5, 0x3c, 0xf7, 0xf2, 0x1a, 0x93,
	0xb0, 0x48, 0xb5, 0xf9, 0xd6, 0xd5, 0x39, 0x21, 0x4f, 0x0a, 0xb0, 0xc6, 0x97, 0xc1, 0x97, 0x90,
	0xcf, 0x69, 0x8b, 0x22, 0x7b, 0x1a, 0xec, 0x75, 0x43, 0x36, 0x04, 0x7b, 0x8b, 0x46, 0xbf, 0x90,
	0x34, 0xaf, 0x94, 0xd5, 0x60, 0xc1, 0x2d, 0xbe, 0x90, 0x34, 0xb1, 0xe4, 0x51, 0xda, 0x94, 0xbc,
	0x78, 0x21, 0x69, 0x68, 0xa9, 0x90, 0x35, 0x77, 0x5b, 0x96, 0x21, 0x40, 0x18, 0xbe, 0xff, 0x4e,
	0xdb, 0x56, 0x55, 0x29, 0xe0, 0x9d, 0x74, 0x92, 0xb0, 0xa2, 0xfb, 0xd0, 0xdd, 0x7a, 0x92, 0x2b,
	0x12, 0x53, 0x5a, 0xb4, 0xda, 0xf2, 0x82, 0xb4, 0x34, 0xee, 0x38, 0x39, 0x23, 0xeb, 0x04, 0x26,
	0xef, 0xe4, 0x15, 0x21, 0x74, 0x4e, 0xd8, 0xa7, 0x00, 0xbc, 0x28, 0x5e, 0xf2, 0xd6, 0xf7, 0x88,
	0x50, 0x3b, 0x81, 0x49, 0xe9, 0x1d, 0x8f, 0x03, 0x8c, 0x25, 0xa7, 0xd7, 0x4e, 0x9c, 0xfd, 0x3a,
	0x80, 0xd9, 0x2b, 0x5d, 0xdb, 0x67, 0xfa, 0x40, 0xc3, 0xef, 0x8e, 0x93, 0xb6, 0x08, 0x1d, 0xd1,
	0xde, 0x60, 0x16, 0xfd, 0xad, 0x38, 0x4d, 0xcf, 0x61, 0xce, 0xab, 0x0a, 0x95, 0x90, 0x87, 0x7f,
	0x90, 0xcd, 0x14, 0xa0, 0x46, 0x25, 0xb0, 0x6d, 0xd7, 0x38, 0xec, 0x6c, 0x7d, 0x7e, 0x68, 0xc6,
	0xa1, 0xc7, 0xdc, 0x5b, 0xc0, 0x3f, 0x37, 0xe7, 0x30, 0x72, 0xd8, 0x10, 0x19, 0x49, 0x77, 0xe1,
	0x4e, 0xbb, 0xd7, 0xa7, 0xbf, 0xe1, 0xb2, 0xb7, 0xb0, 0x72, 0x45, 0x3f, 0xf5, 0x95, 0x04, 0xa1,
	0xaf, 0x74, 0x6d, 0xbb, 0x69, 0x99, 0xc3, 0xe8, 0x68, 0x58, 0x3e, 0x83, 0xc9, 0x5e, 0x8a, 0x0d,
	0x5a, 0xd7, 0x93, 0xc3, 0xcb, 0xd9, 0x97, 0xe7, 0x4f, 0xc2, 0xf3, 0xfa, 0xc9, 0x5b, 0x5a, 0x70,
	0x49, 0xb2, 0xcf, 0x01, 0x6e, 0x2d, 0x7f, 0xe4, 0xa0, 0x7f, 0x13, 0x90, 0x84, 0xfe, 0x1d, 0x00,
	0x00, 0xff, 0xff, 0x46, 0x49, 0x93, 0xdc, 0xa7, 0x0b, 0x00, 0x00,
}
